<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.Storage.DataMovement</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureFileDirectorySDDLCache.TryGetValue(System.String,System.String@)">
            <summary>
            To to get corresponding value from the cache by a key.
            </summary>
            <param name="key">Key of item in the cache. 
            For uploading scenario, it's portable SDDL gotten from local file.
            For downloading scenario, it's permission-key on Azure File Share.
            </param>
            <param name="value">Key of item in the cache. 
            For uploading scenario, it's permission-key on Azure File Share.
            For downloading scenario, it's portable SDDL gotten from local file.</param>
            <returns>Flag to indicate whether can get the item from cache.
            True: Key exists in cache, got corresponding value.
            False: Key does not exist in cache, set value to null. </returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureFileDirectorySDDLCache.TryAddValue(System.String,System.String)">
            <summary>
            To to add an item to the cache.
            </summary>
            <param name="key">Key of item in the cache. 
            For uploading scenario, it's portable SDDL gotten from local file.
            For downloading scenario, it's permission-key on Azure File Share.
            </param>
            <param name="value">Key of item in the cache. 
            For uploading scenario, it's permission-key on Azure File Share.
            For downloading scenario, it's portable SDDL gotten from local file.</param>
            <returns>Flag to indicate whether the item has been added into the cache.
            True: There's no the same key in cache, the item has been added into cache.
            False: There's already an item with the same key in cache, the item is not added into cache. </returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureFileDirectorySDDLCache.Dispose">
            <summary>
            Public dispose method to release all resources owned.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureFileDirectorySDDLCache.Dispose(System.Boolean)">
            <summary>
            Private dispose method to release managed/unmanaged objects.
            If disposing = true clean up managed resources as well as unmanaged resources.
            If disposing = false only clean up unmanaged resources.
            </summary>
            <param name="disposing">Indicates whether or not to dispose managed resources.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.CopyMethod">
            <summary>
            Enum to indicate how the copying operation is handled in DataMovement Library.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.CopyMethod.SyncCopy">
            <summary>
            To download data from source to memory, and upload the data from memory to destination.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.CopyMethod.ServiceSideAsyncCopy">
            <summary>
            To send a start copy request to azure storage to let it do the copying,
            and monitor the copying progress until the copy completed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.CopyMethod.ServiceSideSyncCopy">
            <summary>
            To copy content of each chunk with with Put Block From URL, Append Block From URL or Put Page From URL.
            See <c>https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-from-url</c> for Put Block From URL,
            <c>https://docs.microsoft.com/en-us/rest/api/storageservices/append-block-from-url</c> for Append Block From URL,
            <c>https://docs.microsoft.com/en-us/rest/api/storageservices/put-page-from-url</c> for Put Page From URL for details.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.DirectoryListingScheduler.Dispose">
            <summary>
            Public dispose method to release all resources owned.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Interop.NativeMethods.ThrowExceptionForLastWin32ErrorIfExists">
            <summary>
            Throw exception if last Win32 error is not zero.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Interop.NativeMethods.ThrowExceptionForLastWin32ErrorIfExists(System.Int32[])">
            <summary>
            Throw exception if last Win32 error is not expected.
            </summary>
            <param name="expectErrorCodes">Error codes that are expected.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Interop.NativeMethods.ThrowExceptionForLastWin32ErrorIfExists(System.Int32,System.Int32[])">
            <summary>
            Throw exception if the Win32 error given is not expected.
            </summary>
            <param name="errorCode">Win32 error code want to check.</param>
            <param name="expectErrorCodes">Error codes that are expected.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Interop.NativeMethods.GetLinuxMemoryInfo">
            <summary>
            Retrieves system memory information, as stored in /proc/meminfo
            </summary>
            <returns>Memory information from /proc/meminfo</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.Interop.CrossPlatformHelpers">
            <summary>
            Defines native helper methods.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Interop.CrossPlatformHelpers.GetAvailableMemory">
            <summary>
            Retrieve the available memory (in bytes) as appropriate
            for the current platform
            </summary>
            <returns>Bytes of available memory</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.FileSecurityOperations.EnableRequiredPrivileges(Microsoft.Azure.Storage.DataMovement.PreserveSMBPermissions,System.Boolean)">
            <summary>
            This method should be invoked at the end of transfer job handling, to disable privileges which are enabled at the beginning of the transfer job.
            Getting/setting premissions from/to local file may need some specific privileges. 
            These privileges should be enabled at the beginning of a transfer job, and disbled at the end of the transfer job.
            </summary>
            <param name="preserveSMBPermissions">Permissions types to be preserved.</param>
            <param name="setLocalFilePermission">Indicating whether to set permission to local file. 
            Setting owner info to local file would need specific privilege, while getting owner info doesn't require this privilege.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.FileSecurityOperations.DisablePrivileges(Microsoft.Azure.Storage.DataMovement.PreserveSMBPermissions,System.Boolean)">
            <summary>
            This method should be invoked at the end of transfer job handling, to disable privileges which are enabled at the beginning of the transfer job.
            Getting/setting premissions from/to local file may need some specific privileges. 
            These privileges should be enabled at the beginning of a transfer job, and disbled at the end of the transfer job.
            </summary>
            <param name="preserveSMBPermissions">Permissions types to be preserved.</param>
            <param name="setLocalFilePermission">Indicating whether to set permission to local file. 
            Setting owner info to local file would need specific privilege, while getting owner info doesn't require this privilege.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.LongPath.IsPartiallyQualified(System.String)">
            <summary>
            Returns true if the path specified is relative to the current drive or working directory.
            Returns false if the path is fixed to a specific drive or UNC path.  This method does no
            validation of the path (URIs will be returned as relative as a result).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.LongPath.IsValidDriveChar(System.Char)">
            <summary>
            Returns true if the given character is a valid drive letter
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.LongPath.IsDevice(System.String)">
            <summary>
            Returns true if the path uses any of the DOS device path syntaxes. ("\\.\", "\\?\", or "\??\")
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.LongPath.IsExtended(System.String)">
            <summary>
            Returns true if the path uses the canonical form of extended syntax ("\\?\" or "\??\"). If the
            path matches exactly (cannot use alternate directory separators) Windows will skip normalization
            and path length checks.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.LongPath.GetDirectoryName(System.String)">
            <summary>
            Returns the directory information for the specified path string.
            </summary>
            <param name="path">The path of a file or directory.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.LongPathDirectory.CreateDirectory(System.String)">
            <summary>
            Creates all directories and subdirectories in the specified path unless they already exist.
            </summary>
            <param name="path">The directory to create.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.PreserveSMBPermissions">
            <summary>
            Enum to indicate what permission would be perserved DataMovement Library.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.PreserveSMBPermissions.None">
            <summary>
            Indicate to not preserve any permission
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.PreserveSMBPermissions.Owner">
            <summary>
            To preserve Owner permission.
            In some cases, it requires to enable SeRestorePrivilege to set owner info to local file. 
            See <c>https://docs.microsoft.com/en-us/windows/win32/api/aclapi/nf-aclapi-setnamedsecurityinfow</c> for details.
            To set owner permission to local file during downloading, the process needs to run with an account who has been assigned
            the privilege, for example run the process with administrator account.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.PreserveSMBPermissions.Group">
            <summary>
            To preserve Group permission.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.PreserveSMBPermissions.DACL">
            <summary>
            To preserve DACL permission.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.PreserveSMBPermissions.SACL">
            <summary>
            To preserve SACL permission.
            It requires to enable SeSecurityPrivilege to get or set SACL from or to local file.
            See <c>https://docs.microsoft.com/en-us/windows/win32/api/aclapi/nf-aclapi-setnamedsecurityinfow</c> for details.
            To get or set owner permission from or to local file, the process needs to run with an account who has been assigned
            the privilege, for example run the process with administrator account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext">
            <summary>
            Represents the context for a directory transfer, and provides additional runtime information about its execution.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext.#ctor(Microsoft.Azure.Storage.DataMovement.TransferCheckpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext" /> class.
            </summary>
            <param name="checkpoint">An <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferCheckpoint"/> object representing the last checkpoint from which the transfer continues on.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext" /> class.
            </summary>
            <param name="journalStream">The stream into which the transfer journal info will be written into. 
            It can resume the previous paused transfer from its journal stream.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext.ShouldTransferCallbackAsync">
            <summary>
            Gets or sets the callback invoked to tell whether a transfer should be done.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.MD5Wrapper.UpdateHash(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Calculates an on-going hash using the input byte array.
            </summary>
            <param name="input">The input array used for calculating the hash.</param>
            <param name="offset">The offset in the input buffer to calculate from.</param>
            <param name="count">The number of bytes to use from input.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.MD5Wrapper.ComputeHash">
            <summary>
            Retrieves the string representation of the hash. (Completes the creation of the hash).
            </summary>
            <returns>String representation of the computed hash value.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferSkippedException">
            <summary>
            Exceptions thrown when transfer skips.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferSkippedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferSkippedException" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferSkippedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferSkippedException" /> class.
            </summary>
            <param name="errorMessage">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferSkippedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferSkippedException" /> class.
            </summary>
            <param name="errorMessage">Exception message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferSkippedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferSkippedException" /> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.NativeMD5">
            <summary>
            The class is provides the helper functions to do FISMA compliant MD5.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.NativeMD5.ProvRsaFull">
            <summary>
            Cryptographic service provider.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.NativeMD5.CryptVerifyContext">
            <summary>
            Access to the private keys is not required and the user interface can be bypassed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.NativeMD5.CalgMD5">
            <summary>
            ALG_ID value that identifies the hash algorithm to use.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.NativeMD5.HashVal">
            <summary>
            The hash value or message hash for the hash object specified by hashHandle. 
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.NativeMD5.hashHandle">
            <summary>
            The address to which the function copies a handle to the new hash object. Has to be released by calling the CryptDestroyHash function after we are finished using the hash object.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.NativeMD5.hashProv">
            <summary>
            A handle to a CSP created by a call to CryptAcquireContext.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.NativeMD5.disposed">
            <summary>
            Whether this object has been torn down or not.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.NativeMD5.#ctor">
            <summary>
            Initializes a new instance of NativeMD5.
            </summary> 
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.NativeMD5.Finalize">
            <summary>
            Finalizes an instance of the NativeMD5 class, unhooking it from all events.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.NativeMD5.Initialize">
            <summary>
            Initializes an implementation of the NativeMD5 class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.NativeMD5.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Routes data written to the object into the hash algorithm for computing the hash.
            </summary>
            <param name="array">The input to compute the hash code for.</param>
            <param name="offset">The offset into the byte array from which to begin using data.</param>
            <param name="dataLen">The number of bytes in the byte array to use as data.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.NativeMD5.HashFinal">
            <summary>
            Finalizes the hash computation after the last data is processed by the cryptographic stream object.
            </summary>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.NativeMD5.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the NativeMD5.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.NativeMD5.ValidateReturnCode(System.Boolean)">
            <summary>
            Validates the status returned by all the crypto functions and throws exception per the return code.
            </summary>
            <param name="status">The boolean status returned by the crypto functions.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext">
            <summary>
            Represents the context for a single transfer, and provides additional runtime information about its execution.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SingleTransferContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SingleTransferContext.#ctor(Microsoft.Azure.Storage.DataMovement.TransferCheckpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext" /> class.
            </summary>
            <param name="checkpoint">An <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferCheckpoint"/> object representing the last checkpoint from which the transfer continues on.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SingleTransferContext.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext" /> class.
            </summary>
            <param name="journalStream">The stream into which the transfer journal info will be written into. 
            It can resume the previours paused transfer from its journal stream.</param>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.StreamJournal.TransferChunkSize">
            <summary>
            Size for one saved transfer instance in the journal stream.
            To reuse space transfer instances in journal stream to avoid occupy too much disks when transferring
            large amount of files, it allocates fixed size spaces for one transfer instance in the stream.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.StreamJournal.TransferItemContentSize">
            <summary>
            For each transfer instance, it saves the transfer object itself and the transfer's ProgressTracker in the journal.
            This is size to allocated for the transfer object itself.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.StreamJournal.ProcessTrackerSize">
            <summary>
            For each transfer instance, it saves the transfer object itself and the transfer's ProgressTracker in the journal.
            This is size to allocated for the transfer's ProgressTracker.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.StreamJournal.SubDirectoryTransferChunkSize">
            <summary>
            For a subdirectory pending on listing, only write its relative path into journal.
            An Azure File name path can be no longer than 2048 characters.
            It occupies 40 bytes on .Net and 93 bytes on .Net Core to write a string with 16 characters.
            Here set the size to the maximum Azure File path length plus a fixed reserved length to make sure it won't mess up two neighboring strings.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.StreamJournal.JournalHeadOffset">
            <summary>
            It keeps a list of used transfer chunks and a list free transfers in the journal stream,
            journal head keeps the heads and tails for these two lists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.StreamJournal.ContentOffset">
            <summary>
            Offset in stream for the beginning to persistant transfer instance.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.StreamJournal.SubTransferContentOffset">
            <summary>
            Offset in stream for the beginning to sub-transfer instance.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.StreamJournal.MaxTransferChunkSize">
            <summary>
            Size for directory transfer instance in the journal stream.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.StreamJournal.baseTransfer">
            <summary>
            In the journal, it only allows one base transfer, which means user can only add one transfer to the checkpoint using stream journal.
            A base transfer can be a SingleObjectTransfer or a MultipleObjectTransfer, if it's a MultipleObjectTransfer,
            there could be multiple subtransfers, each subtransfer is a SingleObjectTransfer.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.StreamJournal.journalLock">
            <summary>
            Lock for reading/writing from/to the journal stream.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.StreamJournal.BufferSizeGranularity">
            <summary>
            This is the granularity to allocation memory buffer.
            4K buffer would be enough for most of the TransferEntry serialization.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.StreamJournal.memoryBuffer">
            <summary>
            Buffer used to read from or write to journal.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.StreamJournal.ReadAndCheck(System.Int32)">
            <summary>
            Read from journal file and check whether the read succeeded.
            </summary>
            <param name="length">Count of bytes need to read.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.StreamJournal.ReadAndCheckEmpty">
            <summary>
            Read from journal file and check whether the journal file is empty.
            </summary>
            <returns>True if the journal file is empty.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.StreamJournal.AllocateBuffer(System.Int32)">
            <summary>
            Allocate buffer from memory. This function will allocate buffer on granularity of BufferSizeGranularity.
            </summary>
            <param name="length"> Length of needed buffer.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlobDirectory">
            <summary>
            A utility class for serializing and de-serializing <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> object.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlobDirectory.ContainerUriName">
            <summary>
            Serialization field name for cloud blob container uri.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlobDirectory.RelativeAddressName">
            <summary>
            Serialization field name for cloud blob directory prefix.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlobDirectory.containerUri">
            <summary>
            Cloud blob container uri for the blob directory.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlobDirectory.relativeAddress">
            <summary>
            Prefix of the cloud blob directory.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlobDirectory.blobDir">
            <summary>
            Stores the <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> object,
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlobDirectory.#ctor(Microsoft.Azure.Storage.Blob.CloudBlobDirectory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlobDirectory" /> class.
            </summary>
            <param name="blobDir">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory" /> object. </param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlobDirectory.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlobDirectory"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlobDirectory.BlobDirectory">
            <summary>
            Gets the target <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlobDirectory.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlobDirectory.UpdateStorageCredentials(Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Updates the account credentials associated with the target <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> object.
            </summary>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlobDirectory.CreateCloudBlobDirectoryInstance(Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Creates a <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> object using the specified account credentials.
            </summary>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFile">
            <summary>
            A utility class for serializing and de-serializing <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> object.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFile.FileUriName">
            <summary>
            Serialization field name for cloud file uri.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFile"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFile.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFile"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFile.File">
            <summary>
            Gets or sets the target <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFile.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFile.GetFile(Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFile)">
            <summary>
            Gets the target target <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> object of a <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFile"/> object.
            </summary>
            <param name="fileSerialization">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFile"/> object.</param>
            <returns>The target <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFile.SetFile(Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFile@,Microsoft.Azure.Storage.File.CloudFile)">
            <summary>
            Sets the target target <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> object of a <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFile"/> object.
            </summary>
            <param name="fileSerialization">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFile"/> object.</param>
            <param name="value">A <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFile.UpdateStorageCredentials(Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Updates the account credentials used to access the target <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> object.
            </summary>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFile.CreateCloudFileInstance(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Creates the target <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> object using the specified uri and account credentials.
            </summary>
            <param name="fileUri">Cloud file uri.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFileDirectory">
            <summary>
            A utility class for serializing and de-serializing <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> object.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFileDirectory.FileDirectoryUriName">
            <summary>
            Serialization field name for cloud file directory uri.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFileDirectory.#ctor(Microsoft.Azure.Storage.File.CloudFileDirectory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFileDirectory" /> class.
            </summary>
            <param name="fileDir">A <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory" /> object. </param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFileDirectory.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFileDirectory"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFileDirectory.FileDirectory">
            <summary>
            Gets the target <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory" /> object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFileDirectory.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFileDirectory.UpdateStorageCredentials(Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Updates the account credentials used to access the target <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> object.
            </summary>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudFileDirectory.CreateCloudFileDirectoryInstance(System.Uri,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Creates the target <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> object using the specified uri and account credentials.
            </summary>
            <param name="fileDirectoryUri">Cloud file directory uri.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableFileRequestOptions">
            <summary>
            Define class to serialize FileRequestOptions instance.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableFileRequestOptions.DisableContentMD5ValidationName">
            <summary>
            Serialization field name for DisableContentMD5Validation option.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableFileRequestOptions.MaximumExecutionTimeName">
            <summary>
            Serialization field name for MaximumExecutionTime option.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableFileRequestOptions.ServerTimeoutName">
            <summary>
            Serialization field name for ServerTimeout option.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableFileRequestOptions.StoreFileContentMD5Name">
            <summary>
            Serialization field name for StoreFileContentMD5 option.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableFileRequestOptions.UseTransactionalMD5Name">
            <summary>
            Serialization field name for UseTransactionalMD5 option.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableFileRequestOptions.fileRequestOptions">
            <summary>
            The target <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions"/> object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableFileRequestOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableFileRequestOptions"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableFileRequestOptions.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableFileRequestOptions"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableFileRequestOptions.RequestOptions">
            <summary>
            Gets or sets the target <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions"/> object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableFileRequestOptions.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableRequestOptions.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableRequestOptions"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableRequestOptions.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableAccessCondition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableAccessCondition" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableAccessCondition.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableAccessCondition"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableAccessCondition.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableBlobRequestOptions.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableBlobRequestOptions"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableBlobRequestOptions.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlob">
            <summary>
            A utility class for serializing and de-serializing <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> object.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlob.BlobUriName">
            <summary>
            Serialization field name for cloud blob uri.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlob.BlobTypeName">
            <summary>
            Serialization field name for cloud blob type.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlob.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlob"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlob.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlob"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlob.Blob">
            <summary>
            Gets or sets the target <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlob.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlob.GetBlob(Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlob)">
            <summary>
            Gets the target target <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> object of a <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlob"/> object.
            </summary>
            <param name="blobSerialization">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlob"/> object.</param>
            <returns>The target <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlob.SetBlob(Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlob@,Microsoft.Azure.Storage.Blob.CloudBlob)">
            <summary>
            Sets the target target <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> object of a <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlob"/> object.
            </summary>
            <param name="blobSerialization">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlob"/> object.</param>
            <param name="value">A <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlob.UpdateStorageCredentials(Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Updates the account credentials used to access the target <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> object.
            </summary>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializationHelper.SerializableCloudBlob.CreateCloudBlobInstance(System.Uri,Microsoft.Azure.Storage.Blob.BlobType,Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Creates the target <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> object using the specified uri, blob type and account crendentials.
            </summary>
            <param name="blobUri">Cloud blob uri.</param>
            <param name="blobType">Cloud blob type.</param>
            <param name="credentials">A <see cref="T:Microsoft.Azure.Storage.Auth.StorageCredentials"/> object.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.ShouldOverwriteCallbackAsync">
            <summary>
            Callback invoked to tell whether to overwrite an existing destination.
            </summary>
            <param name="source">Instance of source used to overwrite the destination.</param>
            <param name="destination">Instance of destination to be overwritten.</param>
            <returns>True if the file should be overwritten; otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.ShouldTransferCallbackAsync">
            <summary>
            Callback invoked to tell whether a transfer should be done.
            </summary>
            <param name="source">Instance of the transfer source.</param>
            <param name="destination">Instance of the transfer destination.</param>
            <returns>True if the transfer should be done; otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.SetAttributesCallbackAsync">
            <summary>
            Callback invoked to set destination's attributes in memory. 
            The attributes set in this callback will be sent to azure storage service. 
            </summary>
            <param name="source">Source instance in the transfer.</param>
            <param name="destination">Instance of destination to be overwritten.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferCheckpoint">
            <summary>
            Represents a checkpoint from which a transfer may be resumed and continue.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferCheckpoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferCheckpoint"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferCheckpoint.#ctor(Microsoft.Azure.Storage.DataMovement.TransferCheckpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferCheckpoint"/> class.
            </summary>
            <param name="other">Another TransferCheckpoint object. </param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferCheckpoint.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferCheckpoint"/> class.
            </summary>
            <param name="journalStream">Stream to write checkpoint journal to. </param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferCheckpoint.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.StreamJournal"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferCheckpoint.TransferCollection">
            <summary>
            Gets that container that tracks all transfers associated with this transfer checkpoint
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferCheckpoint.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferCheckpoint.AddTransfer(Microsoft.Azure.Storage.DataMovement.Transfer)">
            <summary>
            Adds a transfer to the transfer checkpoint.
            </summary>
            <param name="transfer">The transfer to be kept track of.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferCheckpoint.GetTransfer(Microsoft.Azure.Storage.DataMovement.TransferLocation,Microsoft.Azure.Storage.DataMovement.TransferLocation,Microsoft.Azure.Storage.DataMovement.TransferMethod)">
            <summary>
            Gets a transfer with the specified source location, destination location and transfer method.
            </summary>
            <param name="sourceLocation">Source location of the transfer.</param>
            <param name="destLocation">Destination location of the transfer.</param>
            <param name="transferMethod">Transfer method.</param>
            <returns>A transfer that matches the specified source location, destination location and transfer method; Or null if no matches.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferCheckpoint.Copy">
            <summary>
            Gets a static snapshot of this transfer checkpoint
            </summary>
            <returns>A snapshot of current transfer checkpoint</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferCollection`1">
            <summary>
            A collection of transfers.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferCollection`1.SingleObjectTransfersName">
            <summary>
            Serialization field name for single object transfers.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferCollection`1.DirectoryTransfersName">
            <summary>
            Serialization field name for directory transfers.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferCollection`1.transfers">
            <summary>
            All transfers in the collection.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferCollection`1.overallProgressTracker">
            <summary>
            Overall transfer progress tracker.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferCollection`1"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferCollection`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferCollection`1"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferCollection`1.Count">
            <summary>
            Gets the number of transfers currently in the collection.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferCollection`1.OverallProgressTracker">
            <summary>
            Gets the overall transfer progress.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferCollection`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the checkpoint.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferCollection`1.AddTransfer(`0,System.Boolean)">
            <summary>
            Adds a transfer.
            </summary>
            <param name="transfer">The transfer to be added.</param>
            <param name="updateProgress">Whether or not to update collection's progress with the subtransfer's.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferCollection`1.RemoveTransfer(Microsoft.Azure.Storage.DataMovement.Transfer)">
            <summary>
            Remove a transfer.
            </summary>
            <param name="transfer">Transfer to be removed</param>
            <returns>True if the transfer is removed successfully, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferCollection`1.GetTransfer(Microsoft.Azure.Storage.DataMovement.TransferLocation,Microsoft.Azure.Storage.DataMovement.TransferLocation,Microsoft.Azure.Storage.DataMovement.TransferMethod)">
            <summary>
            Gets a transfer with the specified source location, destination location and transfer method.
            </summary>
            <param name="sourceLocation">Source location of the transfer.</param>
            <param name="destLocation">Destination location of the transfer.</param>
            <param name="transferMethod">Transfer method.</param>
            <returns>A transfer that matches the specified source location, destination location and transfer method; Or null if no matches.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferCollection`1.GetEnumerator">
            <summary>
            Get an enumerable object for all tansfers in this TransferCollection.
            </summary>
            <returns>An enumerable object for all tansfers in this TransferCollection.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferCollection`1.Copy">
            <summary>
            Gets a static snapshot of this transfer checkpoint
            </summary>
            <returns>A snapshot of current transfer checkpoint</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferContext">
            <summary>
            Represents the context for a transfer, and provides additional runtime information about its execution.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferContext.ForceOverwrite(System.Object,System.Object)">
            <summary>
            Callback used to force overwrite the destination without existence check. 
            It can be used when destination credentials only contains write permission.
            </summary>
            <param name="source">Instance of source used to overwrite the destination.</param>
            <param name="destination">Instance of destination to be overwritten.</param>
            <returns>True if the file should be overwritten; otherwise false.</returns>
            <remarks>
            Read permission is still required in destination credentials in serivce side copy for copy status monitoring.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferContext" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferContext.#ctor(Microsoft.Azure.Storage.DataMovement.TransferCheckpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferContext" /> class.
            </summary>
            <param name="checkpoint">An <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferCheckpoint"/> object representing the last checkpoint from which the transfer continues on.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferContext.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferContext" /> class.
            </summary>
            <param name="journalStream">The stream into which the transfer journal info will be written into. 
            It can resume the previours paused transfer from its journal stream.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferContext.ClientRequestId">
            <summary>
            Gets or sets the client request id.
            </summary>
            <value>A string containing the client request id.</value>
            <remarks>
            Setting this property modifies all the requests involved in the related transfer operation to include the the HTTP <i>x-ms-client-request-id</i> header.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferContext.LogLevel">
            <summary>
            Gets or sets the logging level to be used for the related transfer operation.
            </summary>
            <value>A value of type <see cref="T:Microsoft.Azure.Storage.LogLevel"/> that specifies which events are logged for the related transfer operation.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferContext.LastCheckpoint">
            <summary>
            Gets the last checkpoint of the transfer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferContext.ShouldOverwriteCallbackAsync">
            <summary>
            Gets or sets the callback invoked to tell whether to overwrite an existing destination.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferContext.SetAttributesCallbackAsync">
            <summary>
            Gets or sets the callback invoked to set destination's attributes in memory. 
            The attributes set in this callback will be sent to azure storage service. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferContext.ProgressHandler">
            <summary>
            Gets or sets the progress update handler.
            </summary>
        </member>
        <member name="E:Microsoft.Azure.Storage.DataMovement.TransferContext.FileTransferred">
            <summary>
            The event triggered when a file transfer is completed successfully.
            </summary>
        </member>
        <member name="E:Microsoft.Azure.Storage.DataMovement.TransferContext.FileSkipped">
            <summary>
            The event triggered when a file transfer is skipped.
            </summary>
        </member>
        <member name="E:Microsoft.Azure.Storage.DataMovement.TransferContext.FileFailed">
            <summary>
            The event triggered when a file transfer is failed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferContext.OverallProgressTracker">
            <summary>
            Gets the overall transfer progress.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferContext.Checkpoint">
            <summary>
            Gets the transfer checkpoint that tracks all transfers related to this transfer context.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferControllers.BlobAsyncCopyController">
            <summary>
            Blob asynchronous copy.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferControllers.FileAsyncCopyController">
            <summary>
            Azure file asynchronous copy.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.AsyncCopyController.statusRefreshTimer">
            <summary>
            Timer to signal refresh status.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.AsyncCopyController.statusRefreshTimerLock">
            <summary>
            Lock to protect statusRefreshTimer.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.AsyncCopyController.statusRefreshWaitTime">
            <summary>  
            Wait time between two status refresh requests.  
            </summary>  
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.AsyncCopyController.approachingFinish">
            <summary>
            Indicates whether the copy job is apporaching finish.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.AsyncCopyController.statusRefreshRequestCount">
            <summary>
            Request count sent with current statusRefreshWaitTime
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.AsyncCopyController.state">
            <summary>
            Keeps track of the internal state-machine state.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.AsyncCopyController.hasWork">
            <summary>
            Indicates whether the controller has work available
            or not for the calling code. 
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.AsyncCopyController.lastBytesCopied">
            <summary>
            Indicates the BytesCopied value of last CopyState
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.AsyncCopyController.#ctor(Microsoft.Azure.Storage.DataMovement.TransferScheduler,Microsoft.Azure.Storage.DataMovement.TransferJob,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferControllers.AsyncCopyController"/> class.
            </summary>
            <param name="scheduler">Scheduler object which creates this object.</param>
            <param name="transferJob">Instance of job to start async copy.</param>
            <param name="userCancellationToken">Token user input to notify about cancellation.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferControllers.AsyncCopyController.State">
            <summary>
            Internal state values.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.AsyncCopyController.DoWorkInternalAsync">
            <summary>
            Do work in the controller.
            A controller controls the whole transfer from source to destination, 
            which could be split into several work items. This method is to let controller to do one of those work items.
            There could be several work items to do at the same time in the controller. 
            </summary>
            <returns>Whether the controller has completed. This is to tell <c>TransferScheduler</c> 
            whether the controller can be disposed.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.AsyncCopyController.SetErrorState(System.Exception)">
            <summary>
            Sets the state of the controller to Error, while recording
            the last occurred exception and setting the HasWork and 
            IsFinished fields.
            </summary>
            <param name="ex">Exception to record.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.AsyncCopyController.ParseQueryString(System.String)">
            <summary>
            Taken from <c>Microsoft.Azure.Storage.Core.Util.HttpUtility</c>: Parse the http query string.
            </summary>
            <param name="query">Http query string.</param>
            <returns>A dictionary of query pairs.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferControllers.DummyTransferController">
            <summary>
            Transfer controller for dummy objects.
            Creates dummy objects only, no data transfer will happen.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferControllers.AppendBlobServiceSideSyncCopyController">
            <summary>
            Transfer controller to copy to append blob with AppendBlockFromURL.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.AppendBlobServiceSideSyncCopyController.#ctor(Microsoft.Azure.Storage.DataMovement.TransferScheduler,Microsoft.Azure.Storage.DataMovement.TransferJob,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferControllers.AppendBlobServiceSideSyncCopyController"/> class.
            </summary>
            <param name="scheduler">Scheduler object which creates this object.</param>
            <param name="transferJob">Instance of job to start async copy.</param>
            <param name="userCancellationToken">Token user input to notify about cancellation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.AppendBlobServiceSideSyncCopyController.SetErrorState(System.Exception)">
            <summary>
            Sets the state of the controller to Error, while recording
            the last occurred exception and setting the HasWork and 
            IsFinished fields.
            </summary>
            <param name="ex">Exception to record.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferControllers.BlockBlobServiceSideSyncCopyController">
            <summary>
            Transfer controller to copy to block blob with PutBlockFromURL.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.BlockBlobServiceSideSyncCopyController.#ctor(Microsoft.Azure.Storage.DataMovement.TransferScheduler,Microsoft.Azure.Storage.DataMovement.TransferJob,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferControllers.BlockBlobServiceSideSyncCopyController"/> class.
            </summary>
            <param name="scheduler">Scheduler object which creates this object.</param>
            <param name="transferJob">Instance of job to start async copy.</param>
            <param name="userCancellationToken">Token user input to notify about cancellation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.BlockBlobServiceSideSyncCopyController.SetErrorState(System.Exception)">
            <summary>
            Sets the state of the controller to Error, while recording
            the last occurred exception and setting the HasWork and 
            IsFinished fields.
            </summary>
            <param name="ex">Exception to record.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.FileServiceSideSyncCopyController.#ctor(Microsoft.Azure.Storage.DataMovement.TransferScheduler,Microsoft.Azure.Storage.DataMovement.TransferJob,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferControllers.PageBlobServiceSideSyncCopyController"/> class.
            </summary>
            <param name="scheduler">Scheduler object which creates this object.</param>
            <param name="transferJob">Instance of job to start async copy.</param>
            <param name="userCancellationToken">Token user input to notify about cancellation.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferControllers.PageBlobServiceSideSyncCopyController">
            <summary>
            Transfer controller to copy to page blob with PutPageFromURL.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.PageBlobServiceSideSyncCopyController.#ctor(Microsoft.Azure.Storage.DataMovement.TransferScheduler,Microsoft.Azure.Storage.DataMovement.TransferJob,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferControllers.PageBlobServiceSideSyncCopyController"/> class.
            </summary>
            <param name="scheduler">Scheduler object which creates this object.</param>
            <param name="transferJob">Instance of job to start async copy.</param>
            <param name="userCancellationToken">Token user input to notify about cancellation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.RangeBasedServiceSideSyncCopy.SetErrorState(System.Exception)">
            <summary>
            Sets the state of the controller to Error, while recording
            the last occurred exception and setting the HasWork and 
            IsFinished fields.
            </summary>
            <param name="ex">Exception to record.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferControllers.ServiceSideSyncCopyDest.IDestHandler">
            <summary>
             Service side sync copy can copy between any two ends of append blob, block blob, page blob, and cloud file,
             which is a matrix with 16 directions. 
             All copying shares similar logic with minor differences. 
             Use SourceHandler and DestHandler to deal with minor differences, and let the main controller deal with the whole copying logic.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferControllers.ServiceSideSyncCopySource.ISourceHandler">
            <summary>
             Service side sync copy can copy between any two ends of append blob, block blob, page blob, and cloud file,
             which is a matrix with 16 directions. 
             All copying shares similar logic with minor differences. 
             Use ISourceHandler and IDestHandler to deal with minor differences, and let main controller deal with the whole copying logic.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferControllers.ServiceSideSyncCopyController.State">
            <summary>
            Internal state values.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.RangeBasedReader.MinimumNoDataRangeSize">
            <summary>
            Minimum size of empty range, the empty ranges which is smaller than this size will be merged to the adjacent range with data.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.RangeBasedReader.PrepareToGetRanges">
            <summary>
            It might fail to get large ranges list from storage. This method is to split the whole file to spans of 148MB to get ranges.
            In restartable, we only need to get ranges for chunks in TransferWindow and after TransferEntryOffset in check point.
            In TransferWindow, there might be some chunks adjacent to TransferEntryOffset, so this method will first merge these chunks into TransferEntryOffset;
            Then in remained chunks in the TransferWindow, it's very possible that ranges of several chunks can be got in one 148MB span. 
            To avoid sending too many get ranges requests, this method will merge the chunks to 148MB spans.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.RangeBasedReader.ArrangeRanges">
            <summary>
            Turn raw ranges get from Azure Storage in rangesSpanList
            into list of Range.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.RangeBasedReader.InitDownloadInfo">
            <summary>
            To initialize range based object download related information in the controller.
            This method will call CallFinish.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferControllers.RangeBasedReader.RangeBasedDownloadState.DownloadStream">
            <summary>
            Gets or sets a handle to the memory buffer to ensure the
            memory buffer remains in memory during the entire operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferControllers.RangeBasedReader.RangeBasedDownloadState.StartOffset">
            <summary>
            Gets or sets the starting offset of this part of data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferControllers.RangeBasedReader.RangeBasedDownloadState.Length">
            <summary>
            Gets or sets the length of this part of data.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.StreamedReader.inputStream">
            <summary>
            Source stream to be read from. 
            It's a user input stream or a FileStream with the user input FilePath in source location.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.StreamedReader.ownsStream">
            <summary>
            Value to indicate whether the input stream is a file stream owned by this reader or input by user.
            If it's a file stream owned by this reader, we should close it when reading is finished.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.StreamedReader.transferJob">
            <summary>
            Transfer job instance.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.StreamedReader.lastTransferWindow">
            <summary>
            Transfer window in check point.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.StreamedReader.workToken">
            <summary>
            Work token indicates whether this reader has work, could be 0(no work) or 1(has work).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.StreamedReader.md5HashStream">
            <summary>
            Stream to read from source and calculate md5 hash of source.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferControllers.TransferReaderWriterBase.PreProcessed">
            <summary>
            Gets a value indicating whether it finished preprocess.
            For producer, preprocess is to validate source and fetch block list/page ranges;
            For consumer, preprocess is to open or create destination.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferControllers.TransferReaderWriterBase.EnableSmallFileOptimization">
            <summary>
            Gets or sets a value indicating whether to enable small file optimization.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferControllers.TransferReaderWriterBase.EnableOneChunkFileOptimization">
            <summary>
            Gets a value indicating whether to enable optimization for small file with only one chunk.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.BlockBasedBlobReader.sourceLocation">
            <summary>
            Instance to represent source location.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.BlockBasedBlobReader.sourceBlob">
            <summary>
            Block/append blob instance to be downloaded from.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.BlockBasedBlobReader.lastTransferWindow">
            <summary>
            Window to record unfinished chunks to be retransferred again.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.BlockBasedBlobReader.isFinished">
            <summary>
            Value to indicate whether the transfer is finished. 
            This is to tell the caller that the reader can be disposed,
            Both error happened or completed will be treated to be finished.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.BlockBasedBlobReader.workToken">
            <summary>
            Work token indicates whether this reader has work, could be 0(no work) or 1(has work).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.AppendBlobWriter.workToken">
            <summary>
            Work token indicates whether this writer has work, could be 0(no work) or 1(has work).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.AppendBlobWriter.destExist">
            <summary>
            To indicate whether the destination already exist before this writing.
            If no, when try to set destination's attribute, should get its attributes first.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.AppendBlobWriter.CleanupPropertyForCanonicalization">
            <summary>
            Cleanup properties that might cause request canonicalization check failure.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.BlockBlobWriter.workToken">
            <summary>
            Work token indicates whether this writer has work, could be 0(no work) or 1(has work).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.BlockBlobWriter.DoUploadAndSetBlobAttributes(System.IO.Stream)">
            <summary>
            Upload using put blob and set customized blob attributes.
            Note to ensure DMLib's behavior consistency, this method: 
            1. Uses x-ms-blob-content-encoding and x-ms-blob-content-language as a workaround to bypass request canonicalization
               forced by REST API PutBlob.
            2. As .Net core version's XSCL checks format of Cache-Control and Content-Type, uses x-ms-blob-cache-control and x-ms-blob-content-type
               as a workaround to bypass XSCL's header validation when necessary.
            3. As REST API PutBlob would generate ContentMD5 and overwrite customized ContentMD5, 
               uses SetProperties to set customized ContentMD5 when necessary.
            4. REST API PutBlob would set Content-Type to application/octet-stream by default, if provided Content-Type is null or empty.
               To set Content-Type correctly, REST API SetBlobProperties must be called explicitly.
            </summary>
            <param name="sourceStream">Source stream.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.CloudFileWriter.destExist">
            <summary>
            To indicate whether the destination already exist before this writing.
            If no, when try to set destination's attribute, should get its attributes first.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.CloudFileWriter.CleanupPropertyForCanonicalization">
            <summary>
            Cleanup properties that might cause request canonicalization check failure.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.PageBlobWriter.PageBlobPageSize">
            <summary>
            Size of all files transferred to page blob must be exactly 
            divided by this constant.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.PageBlobWriter.destExist">
            <summary>
            To indicate whether the destination already exist before this writing.
            If no, when try to set destination's attribute, should get its attributes first.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.PageBlobWriter.CleanupPropertyForCanonicalization">
            <summary>
            Cleanup properties that might cause request canonicalization check failure.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.RangeBasedWriter.state">
            <summary>
            Keeps track of the internal state-machine state.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.RangeBasedWriter.toUploadChunksCountdownEvent">
            <summary>
            Countdown event to track number of chunks that still need to be
            uploaded/are in progress of being uploaded. Used to detect when
            all blocks have finished uploading and change state to Commit 
            state.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.StreamedWriter.expectOffset">
            <summary>
            Streamed destination is written sequentially. 
            This variable records offset of next chunk to be written.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.StreamedWriter.hasWork">
            <summary>
            Value to indicate whether there's work to do in the writer.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.StreamedWriter.md5HashStream">
            <summary>
            Stream to calculation destination's content MD5.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.StreamedWriter.ownsStream">
            <summary>
            Value to indicate whether the stream is a file stream opened by the writer or input by user.
            If it's a file stream opened by the writer, we should closed it after transferring finished.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.TransferControllerBase.activeTasks">
            <summary>
            Count of active tasks in this controller.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferControllers.TransferControllerBase.transferException">
            <summary>
            Exception used to be thrown during transfer.
            DoWorkAsync can be invoked many times, while the controller only throws out one exception when the last work is done.
            This is to save the exception during transfer, the last DoWorkAsync will throw it out to transfer caller.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferControllers.TransferControllerBase.TransferContext">
            <summary>
            Gets or sets the transfer context for the controller.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferControllers.TransferControllerBase.IsForceOverwrite">
            <summary>
            Gets whether to force overwrite the destination without existence check.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferControllers.TransferControllerBase.HasWork">
            <summary>
            Gets or sets a value indicating whether the controller has work available
            or not for the calling code. If HasWork is false, while IsFinished
            is also false this indicates that there are currently still active
            async tasks running. The caller should continue checking if this
            controller HasWork available later; once the currently active 
            async tasks are done HasWork will change to True, or IsFinished
            will be set to True.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferControllers.TransferControllerBase.IsFinished">
            <summary>
            Gets a value indicating whether this controller is finished with
            its transferring task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferControllers.TransferControllerBase.Scheduler">
            <summary>
            Gets scheduler object which creates this object.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferControllers.TransferControllerBase.TransferJob">
            <summary>
            Gets TransferJob related to this controller.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferControllers.TransferControllerBase.CancellationToken">
            <summary>
            Gets the cancellation token to control the controller's work.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.TransferControllerBase.DoWorkAsync">
            <summary>
            Do work in the controller.
            A controller controls the whole transfer from source to destination, 
            which could be split into several work items. This method is to let controller to do one of those work items.
            There could be several work items to do at the same time in the controller. 
            </summary>
            <returns>Whether the controller has completed. This is to tell <c>TransferScheduler</c> 
            whether the controller can be disposed.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.TransferControllerBase.CancelWork">
            <summary>
            Cancels all work in the controller.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.TransferControllerBase.Dispose">
            <summary>
            Public dispose method to release all resources owned.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.TransferControllerBase.PreWork">
            <summary>
            Pre work action.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.TransferControllerBase.PostWork">
            <summary>
            Post work action.
            </summary>
            <returns>
            Count of current active task in the controller.
            A Controller can only be destroyed after this count of active tasks is 0.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferControllers.TransferControllerBase.SetErrorState(System.Exception)">
            <summary>
            Sets the state of the controller to Error, while recording
            the last occurred exception and setting the HasWork and 
            IsFinished fields.
            </summary>
            <param name="ex">Exception to record.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureBlobEntry">
            <summary>
            AzureBlobEntry class to represent a single transfer entry on Azure blob service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureBlobEntry.#ctor(System.String,Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureBlobListContinuationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureBlobEntry" /> class.
            </summary>
            <param name="relativePath">Relative path of the blob indicated by this blob entry.</param>
            <param name="cloudBlob">Corresponding CloudBlob.</param>
            <param name="continuationToken">Continuation token when listing to this entry.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureBlobEntry.Blob">
            <summary>
            Gets the reference to the blob.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileDirectoryEntry">
            <summary>
            AzureFileEntry class to represent an azure file directory entry on Azure file service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileDirectoryEntry.#ctor(System.String,Microsoft.Azure.Storage.File.CloudFileDirectory,Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileListContinuationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileDirectoryEntry" /> class.
            </summary>
            <param name="relativePath">Relative path of the directory indicated by this directory entry.</param>
            <param name="cloudFileDirectory">Corresponding CloudFileDirectory instance.</param>
            <param name="continuationToken">Continuation token when listing to this entry.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileDirectoryEntry.FileDirectory">
            <summary>
            Gets the reference to the cloud file directory.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureBlobEnumerator">
            <summary>
            Transfer enumerator for Azure blob storage.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureBlobEnumerator.MaxBlobNameLength">
            <summary>
            A blob name (excluding container name) can be at most 1024 character long based on Windows Azure documentation.
            See <c>https://docs.microsoft.com/en-us/rest/api/storageservices/Naming-and-Referencing-Containers--Blobs--and-Metadata</c> for details.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureBlobEnumerator.ListBlobsSegmentSize">
            <summary>
            Configures how many entries to request in each ListBlobsSegmented/ListFilesAndDirectoriesSegmented call from Azure Storage.
            Configuring a larger number will require fewer calls to Azure Storage, but each call will take longer to complete.
            Maximum supported by the Azure Storage API is 5000. Anything above this is rounded down to 5000.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureBlobEnumerator.#ctor(Microsoft.Azure.Storage.DataMovement.AzureBlobDirectoryLocation)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureBlobEnumerator" /> class.
            </summary>
            <param name="location">Azure blob directory location.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureBlobEnumerator.EnumerateContinuationToken">
            <summary>
            Gets or sets the enumerate continulation token.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureBlobEnumerator.IncludeSnapshots">
            <summary>
            Gets or sets a value indicating whether include blob snapshots when enumerating blobs.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureBlobEnumerator.EnumerateLocation(System.Threading.CancellationToken)">
            <summary>
            Enumerates the blobs present in the storage location referenced by this object.
            </summary>
            <param name="cancellationToken">CancellationToken to cancel the method.</param>
            <returns>Enumerable list of TransferEntry objects found in the storage location referenced by this object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureBlobEnumerator.IsSnapshotTimeEarlier(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            Blob service returns snapshots from the ordest to the newest and the base blob is the last one.
            This method is to check whether the first one is returned before the second one.
            </summary>
            <param name="first">Snapshot time of the first blob.</param>
            <param name="second">Snapshot time of the second blob.</param>
            <returns>
            True: when the first one should be returned before the second one, 
            which means that the first one has a snapshot time and it's earlier that the second one's.
            Otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureBlobEnumerator.GetMaxFileNameLength">
            <summary>
            Gets the maximum file name length of any blob relative to this objects storage location. 
            </summary>
            <returns>Maximum file name length in bytes.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileEntry">
            <summary>
            AzureFileEntry class to represent a single transfer entry on Azure file service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileEntry.#ctor(System.String,Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileListContinuationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileEntry" /> class.
            </summary>
            <param name="relativePath">Relative path of the file indicated by this file entry.</param>
            <param name="cloudFile">Corresponding CloudFile.</param>
            <param name="continuationToken">Continuation token when listing to this entry.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileEntry.File">
            <summary>
            Gets the reference to the cloud file.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileHierarchyEnumerator">
            <summary>
            Transfer enumerator for Azure file storage.
            A hierarchy enumerator will return files and directories which are directly under current directory.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileHierarchyEnumerator.ListFilesSegmentSize">
            <summary>
            Configures how many entries to request in each ListFilesSegmented call from Azure Storage.
            Configuring a larger number will require fewer calls to Azure Storage, but each call will take longer to complete.
            Maximum supported by the Azure Storage API is 5000. Anything above this is rounded down to 5000.
            TODO: It's the same number used by blob, we need to find a proper number for azure file service.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileHierarchyEnumerator.MaxDirectoryAndFileNameLength">
            <summary>
            A file name (excluding container name) can be at most 255 character long based on Windows Azure documentation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileHierarchyEnumerator.MaxPathLength">
            <summary>
            A cloud file path can be at most 1024 character long based on Windows Azure documentation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileHierarchyEnumerator.UriDelimiter">
            <summary>
            Delimiter used in Uri.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileHierarchyEnumerator.#ctor(Microsoft.Azure.Storage.DataMovement.AzureFileDirectoryLocation,Microsoft.Azure.Storage.File.CloudFileDirectory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.AzureFileLocation" /> class.
            </summary>
            <param name="location">Azure file directory location.</param>
            <param name="baseDirectory"></param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileHierarchyEnumerator.EnumerateContinuationToken">
            <summary>
            Gets or sets the enumerate continulation token.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileHierarchyEnumerator.EnumerateLocation(System.Threading.CancellationToken)">
            <summary>
            Enumerates the files in the transfer location referenced by this object.
            </summary>
            <param name="cancellationToken">CancellationToken to notify the method cancellation.</param>
            <returns>Enumerable list of TransferEntry objects found in the storage location referenced by this object.</returns>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileListContinuationToken.FilePath">
            <summary>
            Gets relative path of the last listed file.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileListContinuationToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureBlobListContinuationToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureFileToAzureNameResolver">
            <summary>
            Name resolver for translating Azure file names to Azure blob or Azure file names.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureNameResolver">
            <summary>
            Name resolver class for translating Azure blob/file names.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureNameResolver.DefaultDelimiter">
            <summary>
            Default delimiter used as a directory separator in blob name.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureNameResolver.regexSpecialCharacters">
            <summary>
            Here lists special characters in regular expression,
            those characters need to be escaped in regular expression.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureNameResolver.translateDelimitersRegexFormat">
            <summary>
            Regular expression string format for replacing delimiters 
            that we consider as directory separators:
            <para>Translate delimiters to '\' if it is:
            not the first or the last character in the file name 
            and not following another delimiter</para>
            <example>/folder1//folder2/ with '/' as delimiter gets translated to: /folder1\/folder2/ </example>.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureNameResolver.translateDelimitersRegex">
            <summary>
            Regular expression for replacing delimiters that we consider as directory separators:
            <para>Translate delimiters to '\' if it is:
            not the first or the last character in the file name 
            and not following another delimiter</para>
            <example>/folder1//folder2/ with '/' as delimiter gets translated to: /folder1\/folder2/ </example>.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureToFileNameResolver">
            <summary>
            Name resolver class for translating Azure file/blob names to Windows file names.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureToFileNameResolver.invalidFileNameChars">
            <summary>
            Chars invalid for file name.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureToFileNameResolver.invalidPathChars">
            <summary>
            Chars invalid for path name.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.DirectoryEntry">
            <summary>
            FileEntry class to represent a single transfer entry on file system.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.DirectoryEntry.#ctor(System.String,System.String,Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileListContinuationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileEntry" /> class.
            </summary>
            <param name="relativePath">Relative path of the file indicated by this file entry.</param>
            <param name="fullPath">Full path of the file indicated by this file entry.</param>
            <param name="continuationToken">Continuation token when listing to this entry.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.DirectoryEntry.FullPath">
            <summary>
            Gets the full path of the file.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.EnumerateDirectoryHelper">
            <summary>
            Inter-op methods for enumerating files and directory.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.EnumerateDirectoryHelper.EnumerateAllEntriesInDirectory(System.String,System.String,System.String,System.IO.SearchOption,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Returns the names of files (including their paths) in the specified directory that match the specified 
            search pattern, using a value to determine whether to search subdirectories.
            Folder permission will be checked for those folders containing found files.
            Difference with Directory.GetFiles/EnumerateFiles: Junctions and folders not accessible will be ignored.
            </summary>
            <param name="path">The directory to search. </param>
            <param name="searchPattern">The search string to match against the names of files in path. The parameter 
            cannot end in two periods ("..") or contain two periods ("..") followed by DirectorySeparatorChar or 
            AltDirectorySeparatorChar, nor can it contain any of the characters in InvalidPathChars. </param>
            <param name="fromFilePath">Enumerate from this file, file(s) before this and this file won't be 
            returned.</param>
            <param name="searchOption">One of the values of the SearchOption enumeration that specifies whether 
            the search operation should include only the current directory or should include all subdirectories.
            The default value is TopDirectoryOnly.</param>
            <param name="followsymlink">Indicating whether to enumerate symlinked subdirectories.</param>
            <param name="isBaseDirectory"></param>
            <param name="cancellationToken">CancellationToken to cancel the method.</param>
            <returns>An enumerable collection of file names in the directory specified by path and that match 
            searchPattern and searchOption.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.EnumerateDirectoryHelper.EnumerateInDirectory(System.String,System.String,System.String,System.IO.SearchOption,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Returns the names of files (including their paths) in the specified directory that match the specified 
            search pattern, using a value to determine whether to search subdirectories.
            Folder permission will be checked for those folders containing found files.
            Difference with Directory.GetFiles/EnumerateFiles: Junctions and folders not accessible will be ignored.
            </summary>
            <param name="path">The directory to search. </param>
            <param name="searchPattern">The search string to match against the names of files in path. The parameter 
            cannot end in two periods ("..") or contain two periods ("..") followed by DirectorySeparatorChar or 
            AltDirectorySeparatorChar, nor can it contain any of the characters in InvalidPathChars. </param>
            <param name="fromFilePath">Enumerate from this file, file(s) before this and this file won't be 
            returned.</param>
            <param name="searchOption">One of the values of the SearchOption enumeration that specifies whether 
            the search operation should include only the current directory or should include all subdirectories.
            The default value is TopDirectoryOnly.</param>
            <param name="followsymlink">Indicating whether to enumerate symlinked subdirectories.</param>
            <param name="cancellationToken">CancellationToken to cancel the method.</param>
            <returns>An enumerable collection of file names in the directory specified by path and that match 
            searchPattern and searchOption.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.ErrorEntry">
            <summary>
            Class inherit from TransferEntry to indicate transfer enumeration failures.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.ErrorEntry.Exception">
            <summary>
            Exception received during transfer enumeration.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.ErrorEntry.#ctor(Microsoft.Azure.Storage.DataMovement.TransferException)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.ErrorEntry" /> class.
            </summary>
            <param name="ex">Exception to store.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileEntry">
            <summary>
            FileEntry class to represent a single transfer entry on file system.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileEntry.#ctor(System.String,System.String,Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileListContinuationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileEntry" /> class.
            </summary>
            <param name="relativePath">Relative path of the file indicated by this file entry.</param>
            <param name="fullPath">Full path of the file indicated by this file entry.</param>
            <param name="continuationToken">Continuation token when listing to this entry.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileEntry.FullPath">
            <summary>
            Gets the full path of the file.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileEnumerator">
            <summary>
            Transfer enumerator for file system.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileEnumerator.#ctor(Microsoft.Azure.Storage.DataMovement.DirectoryLocation,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileEnumerator" /> class.
            </summary>
            <param name="location">Directory location.</param>
            <param name="followSymlink">Indicating whether to enumerate symlinked subdirectories.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileEnumerator.EnumerateContinuationToken">
            <summary>
            Gets or sets the enumerate continulation token.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileEnumerator.EnumerateLocation(System.Threading.CancellationToken)">
            <summary>
            Enumerates the files present in the storage location referenced by this object.
            </summary>
            <param name="cancellationToken">CancellationToken to cancel the method.</param>
            <returns>Enumerable list of TransferEntry objects found in the storage location referenced by this object.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileHierarchyEnumerator">
            <summary>
            Transfer enumerator for file system.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileHierarchyEnumerator.#ctor(Microsoft.Azure.Storage.DataMovement.DirectoryLocation,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileEnumerator" /> class.
            </summary>
            <param name="location">Directory location.</param>
            <param name="baseDirectory">Directory location.</param>
            <param name="followSymlink">Indicating whether to enumerate symlinked subdirectories.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileHierarchyEnumerator.EnumerateContinuationToken">
            <summary>
            Gets or sets the enumerate continulation token.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileHierarchyEnumerator.EnumerateLocation(System.Threading.CancellationToken)">
            <summary>
            Enumerates the files present in the storage location referenced by this object.
            </summary>
            <param name="cancellationToken">CancellationToken to cancel the method.</param>
            <returns>Enumerable list of TransferEntry objects found in the storage location referenced by this object.</returns>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileListContinuationToken.FilePath">
            <summary>
            Gets relative path of the last listed file.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileListContinuationToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.AzureBlobToAzureBlobNameResolver">
            <summary>
            Name resolver class for translating Azure blob names to Azure blob names.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.ITransferEnumerator">
            <summary>
            Transfer enumerator interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.ITransferEnumerator.EnumerateContinuationToken">
            <summary>
            Gets or sets the file enumerate continulation token.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.ITransferEnumerator.EnumerateLocation(System.Threading.CancellationToken)">
            <summary>
            Enumerates the files in the transfer location referenced by this object.
            </summary>
            <param name="cancellationToken">CancellationToken to notify the method cancellation.</param>
            <returns>Enumerable list of TransferEntry objects found in the storage location referenced by this object.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.FileToAzureBlobNameResolver">
            <summary>
            Name resolver class for translating Windows file names to Azure blob/file names.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.INameResolver">
            <summary>
            INameResolver interface.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.ListContinuationToken">
            <summary>
            Base class of list continuation tokens
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.SerializableListContinuationToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.TaskQueue`1">
            <summary>
            Task scheduler that schedule the tasks concorrently and FIFO return the result.
            </summary>
            <typeparam name="T">Return type of the scheduled tasks.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.TaskQueue`1.EnqueueJob(System.Func{System.Threading.Tasks.Task{`0}})">
            <summary>
            Enqueue a task into the tasks queue. This method blocks if the queue reaches its capacity.
            </summary>
            <param name="func">Task to enqueue.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.TaskQueue`1.DequeueResult">
            <summary>
            Dequeue the result returned by the enqueued task. This method blocks if the queue is empty.
            </summary>
            <returns>Result from enqueued task.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.TaskQueue`1.CompleteAdding">
            <summary>
            Set this queue to CompleteAdding. Call to DequeueResult throws InvalidOperationException afterwards.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.TransferEntry">
            <summary>
            Base class of transfer entries.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.TransferEntry.#ctor(System.String,Microsoft.Azure.Storage.DataMovement.TransferEnumerators.ListContinuationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.TransferEntry" /> class.
            </summary>
            <param name="relativePath">Relative path of the file indicated by this entry.</param>
            <param name="continuationToken">Continuation token when listing to this entry.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.TransferEntry.RelativePath">
            <summary>
            Gets the relative path of the file indicated by this transfer entry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.TransferEntry.ContinuationToken">
            <summary>
            Continuation token when list to this file entry.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEnumerators.TransferEnumeratorBase">
            <summary>
            Base class of dmlib internal transfer enumerators. It contains the common properties of transfer enumerators.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferEventArgs">
            <summary>
            Transfer event args.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferEventArgs.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferEventArgs"/> class.
            </summary>
            <param name="source">Instance representation of transfer source location.</param>
            <param name="destination">Instance representation of transfer destination location.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEventArgs.Source">
            <summary>
            Gets the instance representation of transfer source location.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEventArgs.Destination">
            <summary>
            Gets the instance representation of transfer destination location.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEventArgs.StartTime">
            <summary>
            Gets transfer start time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEventArgs.EndTime">
            <summary>
            Gets transfer end time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferEventArgs.Exception">
            <summary>
            Gets the exception if the transfer is failed, or null if the transfer is success.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureBlobDirectoryLocation.#ctor(Microsoft.Azure.Storage.Blob.CloudBlobDirectory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.AzureBlobDirectoryLocation"/> class.
            </summary>
            <param name="blobDir">CloudBlobDirectory instance as a location in a transfer job.
            It could be a source, a destination.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.AzureBlobDirectoryLocation.Type">
            <summary>
            Gets transfer location type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.AzureBlobDirectoryLocation.Instance">
            <summary>
            Get source/destination instance in transfer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.AzureBlobDirectoryLocation.BlobDirectory">
            <summary>
            Gets Azure blob directory location in this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.AzureBlobDirectoryLocation.BlobRequestOptions">
            <summary>
            Gets or sets BlobRequestOptions when send request to this location.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureBlobDirectoryLocation.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureBlobDirectoryLocation.Validate">
            <summary>
            Validates the transfer location.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureBlobDirectoryLocation.UpdateCredentials(Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Update credentials of azure blob directory location.
            </summary>
            <param name="credentials">New storage credentials to use.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureBlobLocation.#ctor(Microsoft.Azure.Storage.Blob.CloudBlob)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.AzureBlobLocation"/> class.
            </summary>
            <param name="blob">CloudBlob instance as a location in a transfer job. 
            It could be a source, a destination.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.AzureBlobLocation.Type">
            <summary>
            Gets transfer location type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.AzureBlobLocation.Instance">
            <summary>
            Get source/destination instance in transfer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.AzureBlobLocation.AccessCondition">
            <summary>
            Gets or sets access condition for this location.
            This property only takes effact when the location is a blob or an azure file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.AzureBlobLocation.Blob">
            <summary>
            Gets blob location in this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.AzureBlobLocation.BlobRequestOptions">
            <summary>
            Gets or sets BlobRequestOptions when send request to this location.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureBlobLocation.Validate">
            <summary>
            Validates the transfer location.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureBlobLocation.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureBlobLocation.UpdateCredentials(Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Update credentials of blob or azure file location.
            </summary>
            <param name="credentials">Storage credentials to be updated in blob or azure file location.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureFileDirectoryLocation.#ctor(Microsoft.Azure.Storage.File.CloudFileDirectory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.AzureFileDirectoryLocation"/> class.
            </summary>
            <param name="fileDir">CloudFileDirectory instance as a location in a transfer job. 
            It could be a source, a destination.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.AzureFileDirectoryLocation.Type">
            <summary>
            Gets transfer location type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.AzureFileDirectoryLocation.Instance">
            <summary>
            Get source/destination instance in transfer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.AzureFileDirectoryLocation.FileDirectory">
            <summary>
            Gets Azure file directory location in this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.AzureFileDirectoryLocation.FileRequestOptions">
            <summary>
            Gets or sets FileRequestOptions when send request to this location.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureFileDirectoryLocation.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureFileDirectoryLocation.Validate">
            <summary>
            Validates the transfer location.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureFileDirectoryLocation.UpdateCredentials(Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Update credentials of Azure file directory location.
            </summary>
            <param name="credentials">New storage credentials to use.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureFileLocation.#ctor(Microsoft.Azure.Storage.File.CloudFile)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.AzureFileLocation"/> class.
            </summary>
            <param name="azureFile">CloudFile instance as a location in a transfer job. 
            It could be a source, a destination.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.AzureFileLocation.Type">
            <summary>
            Gets transfer location type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.AzureFileLocation.Instance">
            <summary>
            Get source/destination instance in transfer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.AzureFileLocation.AccessCondition">
            <summary>
            Gets or sets access condition for this location.
            This property only takes effact when the location is a blob or an azure file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.AzureFileLocation.TransferLocationType">
            <summary>
            Gets the type for this location.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.AzureFileLocation.AzureFile">
            <summary>
            Gets azure file location in this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.AzureFileLocation.FileRequestOptions">
            <summary>
            Gets or sets FileRequestOptions when send request to this location.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureFileLocation.Validate">
            <summary>
            Validates the transfer location.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureFileLocation.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.AzureFileLocation.UpdateCredentials(Microsoft.Azure.Storage.Auth.StorageCredentials)">
            <summary>
            Update credentials of blob or azure file location.
            </summary>
            <param name="credentials">Storage credentials to be updated in blob or azure file location.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.DirectoryLocation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryLocation"/> class.
            </summary>
            <param name="dirPath">Path to the local directory as a source/destination to be read from/written to in a transfer.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.DirectoryLocation.Type">
            <summary>
            Gets transfer location type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.DirectoryLocation.Instance">
            <summary>
            Get source/destination instance in transfer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.DirectoryLocation.DirectoryPath">
            <summary>
            Gets path to the local directory location.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.DirectoryLocation.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.DirectoryLocation.Validate">
            <summary>
            Validates the transfer location.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransfer">
            <summary>
            Represents a directory object transfer operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.DirectoryTransfer.dirTransferContext">
            <summary>
            Internal directory transfer context instance.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.DirectoryTransfer.HasDelimiterName">
            <summary>
            Serialization field name for bool to indicate whether delimiter is set.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.DirectoryTransfer.DelimiterName">
            <summary>
            Serialization field name for delimiter.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.DirectoryTransfer.nameResolver">
            <summary>
            Name resolver.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.DirectoryTransfer.lastAzureFileDirectory">
            <summary>
            Records last Azure file directory created to optimize Azure file directory check.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.DirectoryTransfer.#ctor(Microsoft.Azure.Storage.DataMovement.TransferLocation,Microsoft.Azure.Storage.DataMovement.TransferLocation,Microsoft.Azure.Storage.DataMovement.TransferMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransfer"/> class.
            </summary>
            <param name="source">Transfer source.</param>
            <param name="dest">Transfer destination.</param>
            <param name="transferMethod">Transfer method, see <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferMethod"/> for detail available methods.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.DirectoryTransfer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransfer"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.DirectoryTransfer.#ctor(Microsoft.Azure.Storage.DataMovement.DirectoryTransfer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransfer"/> class.
            </summary>
            <param name="other">Another <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransfer"/> object.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.DirectoryTransfer.Context">
            <summary>
            Gets or sets the transfer context of this transfer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.DirectoryTransfer.DirectoryContext">
            <summary>
            Gets the directory transfer context of this transfer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.DirectoryTransfer.SourceEnumerator">
            <summary>
            Gets or sets the transfer enumerator for source location
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.DirectoryTransfer.MaxTransferConcurrency">
            <summary>
            Gets or sets the maximum transfer concurrency
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.DirectoryTransfer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.DirectoryTransfer.ExecuteAsync(Microsoft.Azure.Storage.DataMovement.TransferScheduler,System.Threading.CancellationToken)">
            <summary>
            Execute the transfer asynchronously.
            </summary>
            <param name="scheduler">Transfer scheduler</param>
            <param name="cancellationToken">Token that can be used to cancel the transfer.</param>
            <returns>A task representing the transfer operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.FileLocation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.FileLocation"/> class.
            </summary>
            <param name="filePath">Path to the local file as a source/destination to be read from/written to in a transfer.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.FileLocation.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.FileLocation"/> class.
            </summary>
            <param name="filePath">Path to the local file as a source/destination to be read from/written to in a transfer.</param>
            <param name="relativePath">Relative path to the local file as a source/destination to be read from/written to in a transfer.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.FileLocation.Type">
            <summary>
            Gets transfer location type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.FileLocation.Instance">
            <summary>
            Get source/destination instance in transfer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.FileLocation.RelativePath">
            <summary>
            Gets relative path to the local file location.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.FileLocation.FilePath">
            <summary>
            Gets path to the local file location.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.FileLocation.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.FileLocation.Validate">
            <summary>
            Validates the transfer location.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer">
            <summary>
            Represents a flat directory transfer operation.
            In a flat directory transfer, the enumeration only returns file entries and it only transfers files under the directory.
            
            In a hierarchy directory transfer, the enumeration also returns directory entries, 
            it transfers files under the directory and also handles opertions on directories.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer.ListContinuationTokenName">
            <summary>
            Serialization field name for transfer enumerator list continuation token.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer.SubTransfersName">
            <summary>
            Serialization field name for sub transfers.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer.enumerateContinuationToken">
            <summary>
            List continuation token from which enumeration begins.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer.lockEnumerateContinuationToken">
            <summary>
            Lock object for enumeration continuation token.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer.EnumerationWaitTimeOut">
            <summary>
            Timeout used in reset event waiting.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer.enumerationResetEvent">
            <summary>
            Used to block enumeration when have enumerated enough transfer entries.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer.enumerateException">
            <summary>
            Stores enumerate exception.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer.outstandingTasks">
            <summary>
            Number of outstandings tasks started by this transfer.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer.shouldTransferQueue">
            <summary>
            Job queue to invoke ShouldTransferCallback.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer.subTransfers">
            <summary>
            Storres sub transfers.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer.#ctor(Microsoft.Azure.Storage.DataMovement.TransferLocation,Microsoft.Azure.Storage.DataMovement.TransferLocation,Microsoft.Azure.Storage.DataMovement.TransferMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer"/> class.
            </summary>
            <param name="source">Transfer source.</param>
            <param name="dest">Transfer destination.</param>
            <param name="transferMethod">Transfer method, see <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferMethod"/> for detail available methods.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer.#ctor(Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer"/> class.
            </summary>
            <param name="other">Another <see cref="T:Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer"/> object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.FlatDirectoryTransfer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.HierarchyDirectoryTransfer">
             <summary>
             Represents a hierarchy directory transfer operation.
             In a flat directory transfer, the enumeration only returns file entries and it only transfers files under the directory.
            
             In a hierarchy directory transfer, the enumeration also returns directory entries,
             it transfers files under the directory and also handles opertions on directories.
             </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.HierarchyDirectoryTransfer.SubTransfersName">
            <summary>
            Serialization field name for sub transfers.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.HierarchyDirectoryTransfer.subDirectories">
            <summary>
            Relative path of listed subdirectores.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.HierarchyDirectoryTransfer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.HierarchyDirectoryTransfer"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.HierarchyDirectoryTransfer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SerializableTransferLocation.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.SingleObjectCheckpoint">
            <summary>
            Represents checkpoint of a single transfer job, 
            includes position of transferred bytes and transfer window.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SingleObjectCheckpoint.#ctor(System.Int64,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleObjectCheckpoint"/> class.
            </summary>
            <param name="entryTransferOffset">Transferred offset of this transfer entry.</param>
            <param name="transferWindow">Transfer window of this transfer entry.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.SingleObjectCheckpoint.EntryTransferOffset">
            <summary>
            Gets or sets transferred offset of this transfer entry.
            </summary>
            <value>Transferred offset of this transfer entry.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.SingleObjectCheckpoint.TransferWindow">
            <summary>
            Gets or sets transfer window of this transfer entry.
            </summary>
            <value>Transfer window of this transfer entry.</value>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.SingleObjectTransfer">
            <summary>
            Represents a single object transfer operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.SingleObjectTransfer.transferJob">
            <summary>
            Internal transfer job.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SingleObjectTransfer.#ctor(Microsoft.Azure.Storage.DataMovement.TransferLocation,Microsoft.Azure.Storage.DataMovement.TransferLocation,Microsoft.Azure.Storage.DataMovement.TransferMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleObjectTransfer"/> class.
            This constructor will check whether source and destination is valid for the operation:
            Uri is only valid for non-staging copy. 
            cannot copy from local file/stream to local file/stream 
            </summary>
            <param name="source">Transfer source.</param>
            <param name="dest">Transfer destination.</param>
            <param name="transferMethod">Transfer method, see <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferMethod"/> for detail available methods.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SingleObjectTransfer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleObjectTransfer"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SingleObjectTransfer.#ctor(Microsoft.Azure.Storage.DataMovement.SingleObjectTransfer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleObjectTransfer"/> class.
            </summary>
            <param name="other">Another <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleObjectTransfer"/> object. </param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SingleObjectTransfer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SingleObjectTransfer.Copy">
            <summary>
            Creates a copy of current transfer object.
            </summary>
            <returns>A copy of current transfer object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SingleObjectTransfer.ExecuteAsync(Microsoft.Azure.Storage.DataMovement.TransferScheduler,System.Threading.CancellationToken)">
            <summary>
            Execute the transfer asynchronously.
            </summary>
            <param name="scheduler">Transfer scheduler</param>
            <param name="cancellationToken">Token that can be used to cancel the transfer.</param>
            <returns>A task representing the transfer operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.StreamLocation.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.StreamLocation"/> class.
            </summary>
            <param name="stream">Stream instance as a source/destination to be read from/written to in a transfer.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.StreamLocation.Type">
            <summary>
            Gets transfer location type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.StreamLocation.Instance">
            <summary>
            Get source/destination instance in transfer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.StreamLocation.Stream">
            <summary>
            Gets a stream instance representing the location for this instance.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.StreamLocation.Validate">
            <summary>
            Validates the transfer location.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.SubDirectoryTransfer">
            <summary>
            Represents a sub-directory transfer under a hierarchy directory transfer.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.SubDirectoryTransfer.baseDirectoryTransfer">
            <summary>
            Base <see cref="T:Microsoft.Azure.Storage.DataMovement.HierarchyDirectoryTransfer"/> instance which this <see cref="T:Microsoft.Azure.Storage.DataMovement.SubDirectoryTransfer"/> instance belongs to.
            <see cref="T:Microsoft.Azure.Storage.DataMovement.SubDirectoryTransfer"/> instance returns its listed directories and files to <see cref="T:Microsoft.Azure.Storage.DataMovement.HierarchyDirectoryTransfer"/> with callbacks.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SubDirectoryTransfer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.SubDirectoryTransfer"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SubDirectoryTransfer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.Transfer">
            <summary>
            Base class for transfer operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Transfer.#ctor(Microsoft.Azure.Storage.DataMovement.TransferLocation,Microsoft.Azure.Storage.DataMovement.TransferLocation,Microsoft.Azure.Storage.DataMovement.TransferMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.Transfer"/> class.
            </summary>
            <param name="source">Transfer source.</param>
            <param name="dest">Transfer destination.</param>
            <param name="transferMethod">Transfer method, see <see cref="P:Microsoft.Azure.Storage.DataMovement.Transfer.TransferMethod"/> for detail available methods.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Transfer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.Transfer"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Transfer.#ctor(Microsoft.Azure.Storage.DataMovement.Transfer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.Transfer"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Transfer.OriginalFormatVersion">
            Used to ensure that deserialized transfers are only used
            in scenarios with the same format version they were serialized with.
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Transfer.Source">
            <summary>
            Gets source location for this transfer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Transfer.Destination">
            <summary>
            Gets destination location for this transfer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Transfer.TransferMethod">
            <summary>
            Gets the transfer method used in this transfer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Transfer.Context">
            <summary>
            Gets or sets the transfer context of this transfer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Transfer.BlobType">
            <summary>
            Gets or sets blob type of destination blob.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Transfer.PreserveSMBAttributes">
            <summary>
            Gets or sets a flag that indicates whether to preserve SMB attributes 
            during transferring between local file to Azure File Service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Transfer.PreserveSMBPermissions">
            <summary>
            Gets or sets a value that indicates whether to preserve SMB permissions during transferring.
            Preserving SMB permissions is only supported on Windows.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Transfer.ProgressTracker">
            <summary>
            Gets the progress tracker for this transfer.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Transfer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Transfer.ExecuteAsync(Microsoft.Azure.Storage.DataMovement.TransferScheduler,System.Threading.CancellationToken)">
            <summary>
            Execute the transfer asynchronously.
            </summary>
            <param name="scheduler">Transfer scheduler</param>
            <param name="cancellationToken">Token that can be used to cancel the transfer.</param>
            <returns>A task representing the transfer operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Transfer.Dispose">
            <summary>
            Public dispose method to release all resources owned.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferJob">
            <summary>
            Represents transfer of a single file/blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferJob.#ctor(Microsoft.Azure.Storage.DataMovement.SingleObjectTransfer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferJob"/> class.
            </summary>
            <param name="transfer">Transfer object.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferJob.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferJob"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferJob.#ctor(Microsoft.Azure.Storage.DataMovement.TransferJob)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferJob"/> class.
            </summary>
            <param name="other">The other transfer job to copy properties.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferJob.Source">
            <summary>
            Gets source location for this transfer job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferJob.Destination">
            <summary>
            Gets destination location for this transfer job.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferJob.Overwrite">
            <summary>
            Gets or sets the overwrite flag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferJob.CopyId">
            <summary>
            Gets or sets ID for the asynchronous copy operation.
            </summary>
            <value>ID for the asynchronous copy operation.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferJob.Transfer">
            <summary>
            Gets or sets the parent transfer of this transfer job
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferJob.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferJob.Copy">
            <summary>
            Gets a copy of this transfer job.
            </summary>
            <returns>A copy of current transfer job</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.Constants">
            <summary>
            Constants for use with the transfer classes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.MaxBlockSize">
            <summary>
            Stores the max block size, 100MB.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.DefaultBlockBlobBlockSize">
            <summary>
            Default block size when transferring block blob, 8MB.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.DefaultTransferChunkSize">
            <summary>
            Default size for a chunk transferring, 4MB.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.DefaultMemoryChunkSize">
            <summary>
            Default memory chunk size of memory pool, 4MB.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.DirectoryBlobMetadataKey">
            <summary>
            The metadata key for empty blobs which represent directories in file system.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.MaxSDDLLengthInProperties">
            <summary>
            Maximum length for SDDL string to be set in x-ms-permission header. 
            For SDDL string longer than this value, should invoke CreatePermission on Share first and then set permission-key to x-ms-permission-key header.
            It allows at most 8KB length for a header value. 
            Here use a value which is a bit smaller than 8KB to gurantee success of REST call.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.MaxFilePathLength">
            <summary>
            Maximum windows file path is 260 characters, including a terminating NULL characters.
            This leaves 259 useable characters.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.MaxRelativePathLength">
            <summary>
            A file relative path can be at most 1024 character long based on Windows Azure documentation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.CacheSizeMultiplierInByte">
            <summary>
            Define cache size for one parallel operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.DefaultContainerName">
            <summary>
            Default to root container name if none is specified.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.MinBlockSize">
            <summary>
            Minimum block size, 4MB.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.MaxAppendBlobFileSize">
            <summary>
            Stores the max append blob file size, 50000 * 4M.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.MaxBlockBlobFileSize">
            <summary>
            Stores the max block blob file size, 50000 * 100M.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.MaxCountInTransferWindow">
            <summary>
            Max transfer window size. 
            There can be multiple threads to transfer a file, 
            and we need to record transfer window 
            and have constant length for a transfer entry record in restart journal,
            so set a limitation for transfer window here.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.PageRangesSpanSize">
            <summary>
            Length to get page ranges in one request. 
            In blog <c>http://blogs.msdn.com/b/windowsazurestorage/archive/2012/03/26/getting-the-page-ranges-of-a-large-page-blob-in-segments.aspx</c>,
            it says that it's safe to get page ranges of 150M in one request.
            We use 148MB which is multiples of 4MB.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.FileRangeSpanSize">
            <summary>
            Length to get file ranges in one request.
            Use the same number as page blob for now because cloud file leverages page blob in implementation.
            TODO: update this number when doc for cloud file is available.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.MemoryCacheMultiplier">
            <summary>
            Percentage of available we'll try to use for our memory cache.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.MemoryCacheMaximum">
            <summary>
            Maximum amount of memory to use for our memory cache.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.MemoryManagerCellsMaximum">
            <summary>
            Maximum amount of cells in memory manager.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.CopySASLifeTimeInMinutes">
            <summary>
            The life time in minutes of SAS auto generated for asynchronous copy.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.CopyStatusRefreshMinWaitTimeInMilliseconds">
            <summary>
            The time in milliseconds to wait to refresh copy status for asynchronous copy.
            In order to avoid refreshing the status too aggressively for large copy job and
            meanwhile provide a timely update for small copy job, the wait time increases
            from 0.1 second to 5 seconds gradually and remains 5 seconds afterwards.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.CopyApproachingFinishThresholdInBytes">
            <summary>
            Asynchronous copy decreases status refresh wait time to 0.1s if there's less than 500 MB
            data to copy in order to detect the job completion in time.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.ListSegmentLengthMultiplier">
            <summary>
            Multiplier to calculate number of entries listed in one segment.
            Formula is: Concurrency * <c>ListSegmentLengthMultiplier</c>.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.FileSizeOutOfRangeErrorCode">
            <summary>
            Error code message returned from Azure Storage Server when length of the Azure File is longer than allowed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.MaxSinglePutBlobSize">
            <summary>
            The maximum size of a block blob that can be uploaded with a single Put Blob request.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.UserAgentProductName">
            <summary>
            The product name used in UserAgent header.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Constants.UserAgent">
            <summary>
            UserAgent header.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Constants.GetUserAgent">
            <summary>
            Gets the UserAgent string.
            </summary>
            <returns>UserAgent string.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferErrorCode">
            <summary>
            Error codes for TransferException.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.None">
            <summary>
            No error.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.OpenFileFailed">
            <summary>
            Failed to open file for upload or download.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.UploadSourceFileSizeTooLarge">
            <summary>
            The file to transfer is too large for the destination.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.UploadBlobSourceFileSizeInvalid">
            <summary>
            The file size is invalid for the specified blob type.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.OperationCanceled">
            <summary>
            User canceled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.LocalToLocalTransfersUnsupported">
            <summary>
            Both Source and Destination are locally accessible locations.
            At least one of source and destination should be an Azure Storage location.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.AsyncCopyFailed">
            <summary>
            Failed to do asynchronous copy.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.SameSourceAndDestination">
            <summary>
            Source and destination are the same.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.MismatchCopyId">
            <summary>
            AsyncCopyController detects mismatch between copy id stored in transfer entry and 
            that retrieved from server.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.FailToRetrieveCopyStateForObject">
            <summary>
            AsyncCopyControler fails to retrieve CopyState for the object which we are to monitor.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.FailToAllocateMemory">
            <summary>
            Fails to allocate memory in MemoryManager.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.FailToGetSourceLastWriteTime">
            <summary>
            Fails to get source's last write time.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.NotOverwriteExistingDestination">
            <summary>
            User choose not to overwrite existing destination.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.TransferAlreadyExists">
            <summary>
            Transfer with the same source and destination already exists.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.FailToEnumerateDirectory">
            <summary>
            Fails to enumerate directory.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.FailToVadlidateDestination">
            <summary>
            Fails to validate destination.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.SubTransferFails">
            <summary>
            Sub transfer fails.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.UploadFileSourceFileSizeInvalid">
            <summary>
            The source file size is invalid for azure file.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.FailedToCreateDirectory">
            <summary>
            Failed to create directory because a file already exists with the same name.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.UnsupportedDummyTransfer">
            <summary>
            The transfer type didn't support dummy transfer.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.FailedCheckingShouldTransfer">
            <summary>
            Failed when trying in ShouldTransferCallbackAsync.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferErrorCode.Unknown">
            <summary>
            Uncategorized transfer error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferException">
            <summary>
            Base exception class for exceptions thrown by Blob/FileTransferJobs.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferException.ExceptionVersion">
            <summary>
            Version of current TransferException serialization format.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferException.VersionFieldName">
            <summary>
            Serialization field name for Version.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferException.ErrorCodeFieldName">
            <summary>
            Serialization field name for ErrorCode.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferException.errorCode">
            <summary>
            Transfer error code.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferException" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferException" /> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferException" /> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="ex">The exception that is the cause of the current exception, or a null reference
            if no inner exception is specified.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferException.#ctor(Microsoft.Azure.Storage.DataMovement.TransferErrorCode)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferException" /> class.
            </summary>
            <param name="errorCode">Transfer error code.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferException.#ctor(Microsoft.Azure.Storage.DataMovement.TransferErrorCode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferException" /> class.
            </summary>
            <param name="errorCode">Transfer error code.</param>
            <param name="message">Exception message.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferException.#ctor(Microsoft.Azure.Storage.DataMovement.TransferErrorCode,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferException" /> class.
            </summary>
            <param name="errorCode">Transfer error code.</param>
            <param name="message">Exception message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferException" /> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferException.ErrorCode">
            <summary>
            Gets the detailed error code.
            </summary>
            <value>The error code of the exception.</value>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the exception.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.StorageExtensions">
            <summary>
            Extension methods for CloudBlobs for use with BlobTransfer.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.StorageExtensions.Equals(Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.Blob.CloudBlob)">
            <summary>
            Determines whether two blobs have the same Uri and SnapshotTime.
            </summary>
            <param name="blob">Blob to compare.</param>
            <param name="comparand">Comparand object.</param>
            <returns>True if the two blobs have the same Uri and SnapshotTime; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.StorageExtensions.GenerateCopySourceBlob(Microsoft.Azure.Storage.Blob.CloudBlob)">
            <summary>
            Append an auto generated SAS to a blob uri.
            </summary>
            <param name="blob">Blob to append SAS.</param>
            <returns>Blob Uri with SAS appended.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.MemoryManager">
            <summary>
            Class for maintaining a pool of memory buffer objects.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.AppendBlob">
            <summary>
              Looks up a localized string similar to AppendBlob.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.AsyncCopyFromFileToAppendBlobNotSupportException">
            <summary>
              Looks up a localized string similar to Copying from File Storage to append Blob Storage asynchronously is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.AsyncCopyFromFileToPageBlobNotSupportException">
            <summary>
              Looks up a localized string similar to Copying from File Storage to page Blob Storage asynchronously is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.AzureFile">
            <summary>
              Looks up a localized string similar to AzureFile.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.BlobFileSizeInvalidException">
            <summary>
              Looks up a localized string similar to File size {0} is invalid for {1}, must be a multiple of {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.BlobFileSizeTooLargeException">
            <summary>
              Looks up a localized string similar to File size {0} is larger than {1} maximum size {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.BlockBlob">
            <summary>
              Looks up a localized string similar to BlockBlob.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.BlockSizeMustBeMultipleOf4MB">
            <summary>
              Looks up a localized string similar to BlockSize must be multiple of 4MB..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.BlockSizeOutOfRangeException">
            <summary>
              Looks up a localized string similar to BlockSize must be between {0} and {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.CannotDeserializeLocationType">
            <summary>
              Looks up a localized string similar to Cannot deserialize to TransferLocation when its TransferLocationType is {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.CannotSerializeStreamLocation">
            <summary>
              Looks up a localized string similar to The TransferLocation cannot be serialized when it represents a stream location..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.CanOnlyCopyToFileOrBlobException">
            <summary>
              Looks up a localized string similar to Destination of asynchronous copying must be File Storage or Blob Storage..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.CloudFileSizeTooLargeException">
            <summary>
              Looks up a localized string similar to The file size exceeds the maximum permissible limit..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.DeadLoop">
            <summary>
              Looks up a localized string similar to Potential dead loop in directory structure due to symbolic link {0} with target to {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.DeserializationVersionNotMatchException">
            <summary>
              Looks up a localized string similar to {0} Deserialization failed: Version number doesn&apos;t match. Version number:{1}, expect:{2}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.DestinationBlobTypeNotMatch">
            <summary>
              Looks up a localized string similar to User specified blob type does not match the blob type of the existing destination blob..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.DestinationChangedException">
            <summary>
              Looks up a localized string similar to Destination might be changed by other process or application..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.DestinationMustBeBaseBlob">
            <summary>
              Looks up a localized string similar to Destination must be a base blob..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.DownloadedMd5MismatchException">
             <summary>
               Looks up a localized string similar to The MD5 hash calculated from the downloaded data does not match the MD5 hash stored in the property of source: {0}. Please refer to help or documentation for detail.
            MD5 calculated: {1}
            MD5 in property: {2}.
             </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.EnumerateDirectoryException">
            <summary>
              Looks up a localized string similar to Failed to enumerate directory {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.FailedToAllocateMemoryException">
            <summary>
              Looks up a localized string similar to Failed to allocate required memory..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.FailedToAsyncCopyObjectException">
            <summary>
              Looks up a localized string similar to Failed to copy from &quot;{0}&quot; to &quot;{1}&quot;. Copy status: {2}; Description: {3}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.FailedToCreateDirectoryException">
            <summary>
              Looks up a localized string similar to Failed to create directory {0} because a file already exists with the same name..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.FailedToEnablePrivilegeException">
            <summary>
              Looks up a localized string similar to Failed to enable {0}, please run the process with an account with privilege &apos;{0}&apos; assigned, for example run it with administrator..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.FailedToEnumerateDirectory">
            <summary>
              Looks up a localized string similar to Failed to enumerate directory {0} with file pattern {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.FailedToGetBlobTypeException">
            <summary>
              Looks up a localized string similar to Failed to retrieve the original BlobType..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.FailedToGetFileInfoException">
            <summary>
              Looks up a localized string similar to Failed to get information for file {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.FailedToOpenFileException">
            <summary>
              Looks up a localized string similar to Failed to open file {0}: {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.FailedToRetrieveCopyStateForObjectException">
            <summary>
              Looks up a localized string similar to Failed to retrieve CopyState for object &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.FailedToValidateDestinationException">
            <summary>
              Looks up a localized string similar to Failed to validate destination..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.FilePathTooLong">
            <summary>
              Looks up a localized string similar to The specified path, file name, or both are too long for file: &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.InvalidInitialEntryStatusForControllerException">
            <summary>
              Looks up a localized string similar to The initial entry status {0} is invalid for {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.LocalToLocalTransferUnsupportedException">
            <summary>
              Looks up a localized string similar to Both Source and Destination are locally accessible locations. At least one of source and destination should be an Azure Storage location..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.MaxListingConcurrencyNotPositiveException">
            <summary>
              Looks up a localized string similar to Max listing concurrency must be positive..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.MismatchFoundBetweenLocalAndServerCopyIdsException">
            <summary>
              Looks up a localized string similar to The local copy id is different from the one returned from the server..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.NotSupportedBlobType">
            <summary>
              Looks up a localized string similar to Blob type &apos;{0}&apos; is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.OnlyOneTransferAllowed">
            <summary>
              Looks up a localized string similar to Only one transfer is allowed with stream journal..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.OnlySupportBlobAzureFileSource">
            <summary>
              Looks up a localized string similar to Copying source must be an Azure Blob or an Azure File. .
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.OverwriteCallbackCancelTransferException">
            <summary>
              Looks up a localized string similar to Skipped file &quot;{0}&quot; because target &quot;{1}&quot; already exists..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.PageBlob">
            <summary>
              Looks up a localized string similar to PageBlob.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.ParallelCountNotPositiveException">
            <summary>
              Looks up a localized string similar to Parallel operations count must be positive..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.ParameterCannotBeNullException">
            <summary>
              Looks up a localized string similar to {0} cannot be null..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.PathNotFound">
            <summary>
              Looks up a localized string similar to Cannot find the path &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.PrivilegeRequiredException">
            <summary>
              Looks up a localized string similar to &quot;Lack of required privilege(s). Please run the process with privilege(s) &apos;{0}&apos; assigned, for example run it with administrator..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.ProvideExactlyOneOfThreeParameters">
            <summary>
              Looks up a localized string similar to Exactly one of these parameters must be provided: {0}, {1}, {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.ReadableSizeFormatBytes">
            <summary>
              Looks up a localized string similar to {0:0.##} bytes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.ReadableSizeFormatExaBytes">
            <summary>
              Looks up a localized string similar to {0:0.##}EB.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.ReadableSizeFormatGigaBytes">
            <summary>
              Looks up a localized string similar to {0:0.##}GB.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.ReadableSizeFormatKiloBytes">
            <summary>
              Looks up a localized string similar to {0:0.##}KB.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.ReadableSizeFormatMegaBytes">
            <summary>
              Looks up a localized string similar to {0:0.##}MB.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.ReadableSizeFormatPetaBytes">
            <summary>
              Looks up a localized string similar to {0:0.##}PB.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.ReadableSizeFormatTeraBytes">
            <summary>
              Looks up a localized string similar to {0:0.##}TB.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.RelativePathTooLong">
            <summary>
              Looks up a localized string similar to File {0} is too long, relative path must not exceed 1024 characters. .
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.RestartableInfoCorruptedException">
            <summary>
              Looks up a localized string similar to Failed to read restartable info from file..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.RestartableLogCorrupted">
            <summary>
              Looks up a localized string similar to The journal stream is corrupted..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.ResumeStreamTransferNotSupported">
            <summary>
              Looks up a localized string similar to Resuming transfer from or to a stream is not supported. .
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.SearchPatternInRecursiveModeFromAzureFileNotSupportedException">
            <summary>
              Looks up a localized string similar to Search pattern is not supported in recursive mode when the source is an Azure file directory..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.ServiceSideSyncCopyFromFileNotSupportedException">
            <summary>
              Looks up a localized string similar to Copying from Azure File Storage with service side synchronous copying is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.ServiceSideSyncCopyNotSupportException">
            <summary>
              Looks up a localized string similar to Service side synchronous copying is only supported when destination is Azure Blob Storage or Azure File Storage..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.ServiceSideSyncCopyToFileNotSupportedException">
            <summary>
              Looks up a localized string similar to Copying to Azure File Storage with service side synchronous copying is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.SmallMemoryCacheSizeLimitationException">
            <summary>
              Looks up a localized string similar to MaximumCacheSize cannot be less than {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.SourceAndDestinationBlobTypeDifferent">
            <summary>
              Looks up a localized string similar to Blob type of source and destination must be the same..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.SourceAndDestinationLocationCannotBeEqualException">
            <summary>
              Looks up a localized string similar to Source and destination cannot be the same..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.SourceBlobDoesNotExistException">
            <summary>
              Looks up a localized string similar to Source blob does not exist..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.SourceBlobTypeNotMatch">
            <summary>
              Looks up a localized string similar to User specified blob type does not match the blob type of the existing source blob..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.SourceChangedException">
            <summary>
              Looks up a localized string similar to Source might be changed by other process or application..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.SourceDoesNotExistException">
            <summary>
              Looks up a localized string similar to Source does not exist..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.SourceMustBeFixedSize">
            <summary>
              Looks up a localized string similar to Source must be fixed size when destination is {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.SourceNameInvalidInFileSystem">
            <summary>
              Looks up a localized string similar to The corresponding destination path for source &quot;{0}&quot; is invalid in Windows system..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.StreamMustSupportReadException">
            <summary>
              Looks up a localized string similar to {0} must support Read..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.StreamMustSupportSeekException">
            <summary>
              Looks up a localized string similar to {0} must support Seek..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.StreamMustSupportWriteException">
            <summary>
              Looks up a localized string similar to {0} must support Write..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.StreamNotExpandable">
            <summary>
              Looks up a localized string similar to The stream is not expandable..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.SubTransferFailsException">
            <summary>
              Looks up a localized string similar to {0} sub transfer(s) failed. .
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.SyncCopyFromUriToAzureBlobNotSupportedException">
            <summary>
              Looks up a localized string similar to Copying from uri to Azure Blob Storage synchronously is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.SyncCopyFromUriToAzureFileNotSupportedException">
            <summary>
              Looks up a localized string similar to Copying from uri to Azure File Storage synchronously is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.TransferAlreadyExists">
            <summary>
              Looks up a localized string similar to A transfer operation with the same source and destination already exists..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.TransferCancelledException">
            <summary>
              Looks up a localized string similar to The transfer has been cancelled..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.TransferEntryCopyIdCannotBeNullOrEmptyException">
            <summary>
              Looks up a localized string similar to TransferEntry.CopyId cannot be null or empty because we need it to verify we are monitoring the right blob copying process..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.UnableToLoadDLL">
            <summary>
              Looks up a localized string similar to Unable to load a dll, this might because the target dll is located on a disk without exec permission..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.UncategorizedException">
            <summary>
              Looks up a localized string similar to The transfer failed..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.UnsupportedBlobTypeException">
            <summary>
              Looks up a localized string similar to The given blob type {0} is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.UnsupportedDummyTransferException">
            <summary>
              Looks up a localized string similar to Unsupported dummy transfer type..
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Resources.UnsupportedTransferLocationException">
            <summary>
              Looks up a localized string similar to The given transfer location type {0} is not supported..
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.MD5HashStream">
            <summary>
            Class to make thread safe stream access and calculate MD5 hash.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.MD5HashStream.stream">
            <summary>
            Stream  object.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.MD5HashStream.semaphore">
            <summary>
            Semaphore object. In our case, we can only have one operation at the same time.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.MD5HashStream.finishedSeparateMd5Calculator">
            <summary>
            In restart mode, we start a separate thread to calculate MD5hash of transferred part.
            This variable indicates whether finished to calculate this part of MD5hash.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.MD5HashStream.succeededSeparateMd5Calculator">
            <summary>
            Indicates whether succeeded in calculating MD5hash of the transferred bytes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.MD5HashStream.md5hash">
            <summary>
            Running md5 hash of the blob being downloaded.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.MD5HashStream.md5hashOffset">
            <summary>
            Offset of the transferred bytes. We should calculate MD5hash on all bytes before this offset.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.MD5HashStream.#ctor(System.IO.Stream,System.Int64,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.MD5HashStream"/> class.
            </summary>
            <param name="stream">Stream object.</param>
            <param name="lastTransferOffset">Offset of the transferred bytes.</param>
            <param name="md5hashCheck">Whether need to calculate MD5Hash.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.MD5HashStream.CheckMd5Hash">
            <summary>
            Gets a value indicating whether need to calculate MD5 hash.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.MD5HashStream.FinishedSeparateMd5Calculator">
            <summary>
            Gets a value indicating whether already finished to calculate MD5 hash of transferred bytes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.MD5HashStream.SucceededSeparateMd5Calculator">
            <summary>
            Gets a value indicating whether already succeeded in calculating MD5 hash of transferred bytes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.MD5HashStream.CalculateMd5(Microsoft.Azure.Storage.DataMovement.MemoryManager,System.Action)">
            <summary>
            Calculate MD5 hash of transferred bytes.
            </summary>
            <param name="memoryManager">Reference to MemoryManager object to require buffer from.</param>
            <param name="checkCancellation">Action to check whether to cancel this calculation.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.MD5HashStream.ReadAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Begin async read from stream.
            </summary>
            <param name="readOffset">Offset in stream to read from.</param>
            <param name="buffer">The buffer to read the data into.</param>
            <param name="offset">The byte offset in buffer at which to begin writing data read from the stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="cancellationToken">Token used to cancel the asynchronous reading.</param>
            <returns>A task that represents the asynchronous read operation. The value of the
            <c>TResult</c> parameter contains the total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.MD5HashStream.ReadAsync(System.Int64,System.Byte[][],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Begin async read from stream.
            </summary>
            <param name="readOffset">Offset in stream to read from.</param>
            <param name="buffers">The buffers to read the data into.</param>
            <param name="offset">The byte offset in buffers at which to begin writing data read from the stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="cancellationToken">Token used to cancel the asynchronous reading.</param>
            <returns>A task that represents the asynchronous read operation. The value of the
            <c>TResult</c> parameter contains the total number of bytes read into the buffers.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.MD5HashStream.WriteAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Begin async write to stream.
            </summary>
            <param name="writeOffset">Offset in stream to write to.</param>
            <param name="buffer">The buffer to write the data from.</param>
            <param name="offset">The byte offset in buffer from which to begin writing.</param>
            <param name="count">The maximum number of bytes to write.</param>
            <param name="cancellationToken">Token used to cancel the asynchronous writing.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.MD5HashStream.WriteAsync(System.Int64,System.Byte[][],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Begin async write to stream.
            </summary>
            <param name="writeOffset">Offset in stream to write to.</param>
            <param name="buffers">The buffers to write the data from.</param>
            <param name="offset">The byte offset in buffers from which to begin writing.</param>
            <param name="count">The maximum number of bytes to write.</param>
            <param name="cancellationToken">Token used to cancel the asynchronous writing.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.MD5HashStream.MD5HashTransformBlock(System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes the hash value for the specified region of the input byte array
            and copies the specified region of the input byte array to the specified
            region of the output byte array.
            </summary>
            <param name="streamOffset">Offset in stream of the block on which to calculate MD5 hash.</param>
            <param name="inputBuffer">The input to compute the hash code for.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <returns>Whether succeeded in calculating MD5 hash 
            or not finished the separate thread to calculate MD5 hash at the time. </returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.MD5HashStream.MD5HashTransformBlock(System.Int64,System.Byte[][],System.Int32,System.Int32)">
            <summary>
            Computes the hash value for the specified region of the input byte array
            and copies the specified region of the input byte array to the specified
            region of the output byte array.
            </summary>
            <param name="streamOffset">Offset in stream of the block on which to calculate MD5 hash.</param>
            <param name="inputBuffer">The input to compute the hash code for.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <returns>Whether succeeded in calculating MD5 hash 
            or not finished the separate thread to calculate MD5 hash at the time. </returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.MD5HashStream.MD5HashTransformFinalBlock">
            <summary>
            Computes the hash value for the specified region of the specified byte array.
            </summary>
            <returns>An array that is a copy of the part of the input that is hashed.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.MD5HashStream.Dispose">
            <summary>
            Releases or resets unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.MD5HashStream.Dispose(System.Boolean)">
            <summary>
            Private dispose method to release managed/unmanaged objects.
            If disposing = true clean up managed resources as well as unmanaged resources.
            If disposing = false only clean up unmanaged resources.
            </summary>
            <param name="disposing">Indicates whether or not to dispose managed resources.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.MD5HashStream.Read(System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read from stream.
            </summary>
            <param name="readOffset">Offset in stream to read from.</param>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified
             byte array with the values between offset and (offset + count - 1) replaced
             by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.MD5HashStream.WaitOnSemaphoreAsync(System.Threading.CancellationToken)">
            <summary>
            Wait for one semaphore.
            </summary>
            <param name="cancellationToken">Token used to cancel waiting on the semaphore.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.MD5HashStream.ReleaseSemaphore">
            <summary>
            Release semaphore.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.MD5HashStream.WaitMD5CalculationToFinish">
            <summary>
            Wait for MD5 calculation to be finished.
            In our test, MD5 calculation is really fast, 
            and SpinOnce has sleep mechanism, so use Spin instead of sleep here.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferJobStatus">
            <summary>
            Status for TransferEntry.
            NotStarted -> Skipped
                       -> Transfer -> [Monitor ->] Finished.
                                                   Failed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferJobStatus.NotStarted">
            <summary>
            Transfer is not started.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferJobStatus.SkippedDueToShouldNotTransfer">
            <summary>
            The transfer should not be done because ShouldTransferCallbackAsync returned false on the transfer job.
            This is only used when the transfer instance is created from a directory transfer.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferJobStatus.Skipped">
            <summary>
            Transfer is skipped because ShouldOverwriteCallbackAsync returned false on the transfer job.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferJobStatus.Transfer">
            <summary>
            Transfer file.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferJobStatus.Monitor">
            <summary>
            Monitor transfer process.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferJobStatus.Finished">
            <summary>
            Transfer is finished successfully.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferJobStatus.Failed">
            <summary>
            Transfer is failed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferMethod.SyncCopy">
            <summary>
            To read data from source to memory and then write the data in memory to destination.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferMethod.ServiceSideAsyncCopy">
            <summary>
            To send a start copy request to azure storage to let it do the copying,
            and monitor the copying progress until the copy finished.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferMethod.ServiceSideSyncCopy">
            <summary>
            To copy content of each chunk with with "Put Block From URL", "Append Block From URL" or "Put Page From URL".
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferMethod.DummyCopy">
            <summary>
            Creates dummy objects only, no data transfer will happen.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferLocation.Type">
            <summary>
            Gets transfer location type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferLocation.Instance">
            <summary>
            Gets source/destination instance in transfer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferLocation.IsInstanceInfoFetched">
            <summary>
            Gets or sets a value indicating whether detailed information(ETag, LMT, Length, Properties and metadata) 
            of the instance contained in the current transfer location has been fetched.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferLocation.Validate">
            <summary>
            Validates the transfer location.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.UriLocation.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.UriLocation"/> class.
            </summary>
            <param name="uri">Uri to the source in an asynchronously copying job.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.UriLocation.Type">
            <summary>
            Gets transfer location type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.UriLocation.Instance">
            <summary>
            Get source/destination instance in transfer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.UriLocation.Uri">
            <summary>
            Gets Uri to the location.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.UriLocation.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes the object.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.UriLocation.Validate">
            <summary>
            Validates the transfer location.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferManager">
            <summary>
            TransferManager class
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferManager.configurations">
            <summary>
            Transfer configurations associated with the transfer manager
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferManager.scheduler">
            <summary>
            Transfer scheduler that schedules execution of transfer jobs
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferManager.allTransfers">
            <summary>
            Stores all running transfers
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferManager.Configurations">
            <summary>
            Gets or sets the transfer configurations associated with the transfer manager
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.UploadAsync(System.String,Microsoft.Azure.Storage.Blob.CloudBlob)">
            <summary>
            Upload a file to Azure Blob Storage.
            </summary>
            <param name="sourcePath">Path to the source file.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.UploadAsync(System.String,Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.DataMovement.UploadOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext)">
            <summary>
            Upload a file to Azure Blob Storage.
            </summary>
            <param name="sourcePath">Path to the source file.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <param name="options">An <see cref="T:Microsoft.Azure.Storage.DataMovement.UploadOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.UploadAsync(System.String,Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.DataMovement.UploadOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext,System.Threading.CancellationToken)">
            <summary>
            Upload a file to Azure Blob Storage.
            </summary>
            <param name="sourcePath">Path to the source file.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <param name="options">An <see cref="T:Microsoft.Azure.Storage.DataMovement.UploadOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.UploadAsync(System.IO.Stream,Microsoft.Azure.Storage.Blob.CloudBlob)">
            <summary>
            Upload a file to Azure Blob Storage.
            </summary>
            <param name="sourceStream">A <see cref="T:System.IO.Stream"/> object providing the file content.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.UploadAsync(System.IO.Stream,Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.DataMovement.UploadOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext)">
            <summary>
            Upload a file to Azure Blob Storage.
            </summary>
            <param name="sourceStream">A <see cref="T:System.IO.Stream"/> object providing the file content.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <param name="options">An <see cref="T:Microsoft.Azure.Storage.DataMovement.UploadOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.UploadAsync(System.IO.Stream,Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.DataMovement.UploadOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext,System.Threading.CancellationToken)">
            <summary>
            Upload a file to Azure Blob Storage.
            </summary>
            <param name="sourceStream">A <see cref="T:System.IO.Stream"/> object providing the file content.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <param name="options">An <see cref="T:Microsoft.Azure.Storage.DataMovement.UploadOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.UploadAsync(System.String,Microsoft.Azure.Storage.File.CloudFile)">
            <summary>
            Upload a file to Azure File Storage.
            </summary>
            <param name="sourcePath">Path to the source file.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.UploadAsync(System.String,Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.DataMovement.UploadOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext)">
            <summary>
            Upload a file to Azure File Storage.
            </summary>
            <param name="sourcePath">Path to the source file.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <param name="options">An <see cref="T:Microsoft.Azure.Storage.DataMovement.UploadOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.UploadAsync(System.String,Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.DataMovement.UploadOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext,System.Threading.CancellationToken)">
            <summary>
            Upload a file to Azure File Storage.
            </summary>
            <param name="sourcePath">Path to the source file.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <param name="options">An <see cref="T:Microsoft.Azure.Storage.DataMovement.UploadOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.UploadAsync(System.IO.Stream,Microsoft.Azure.Storage.File.CloudFile)">
            <summary>
            Upload a file to Azure File Storage.
            </summary>
            <param name="sourceStream">A <see cref="T:System.IO.Stream"/> object providing the file content.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.UploadAsync(System.IO.Stream,Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.DataMovement.UploadOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext)">
            <summary>
            Upload a file to Azure File Storage.
            </summary>
            <param name="sourceStream">A <see cref="T:System.IO.Stream"/> object providing the file content.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <param name="options">An <see cref="T:Microsoft.Azure.Storage.DataMovement.UploadOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.UploadAsync(System.IO.Stream,Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.DataMovement.UploadOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext,System.Threading.CancellationToken)">
            <summary>
            Upload a file to Azure File Storage.
            </summary>
            <param name="sourceStream">A <see cref="T:System.IO.Stream"/> object providing the file content.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <param name="options">An <see cref="T:Microsoft.Azure.Storage.DataMovement.UploadOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.DownloadAsync(Microsoft.Azure.Storage.Blob.CloudBlob,System.String)">
            <summary>
            Download an Azure blob from Azure Blob Storage.
            </summary>
            <param name="sourceBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the source Azure blob.</param>
            <param name="destPath">Path to the destination file.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.DownloadAsync(Microsoft.Azure.Storage.Blob.CloudBlob,System.String,Microsoft.Azure.Storage.DataMovement.DownloadOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext)">
            <summary>
            Download an Azure blob from Azure Blob Storage.
            </summary>
            <param name="sourceBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the source Azure blob.</param>
            <param name="destPath">Path to the destination file.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DownloadOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.UploadDirectoryAsync(System.String,Microsoft.Azure.Storage.Blob.CloudBlobDirectory)">
            <summary>
            Upload a directory to Azure Blob Storage.
            </summary>
            <param name="sourcePath">Path to the source directory</param>
            <param name="destBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the destination Azure blob directory.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.UploadDirectoryAsync(System.String,Microsoft.Azure.Storage.Blob.CloudBlobDirectory,Microsoft.Azure.Storage.DataMovement.UploadDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext)">
            <summary>
            Upload a directory to Azure Blob Storage.
            </summary>
            <param name="sourcePath">Path to the source directory</param>
            <param name="destBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the destination Azure blob directory.</param>
            <param name="options">An <see cref="T:Microsoft.Azure.Storage.DataMovement.UploadDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.UploadDirectoryAsync(System.String,Microsoft.Azure.Storage.Blob.CloudBlobDirectory,Microsoft.Azure.Storage.DataMovement.UploadDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext,System.Threading.CancellationToken)">
            <summary>
            Upload a directory to Azure Blob Storage.
            </summary>
            <param name="sourcePath">Path to the source directory</param>
            <param name="destBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the destination Azure blob directory.</param>
            <param name="options">An <see cref="T:Microsoft.Azure.Storage.DataMovement.UploadDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.UploadDirectoryAsync(System.String,Microsoft.Azure.Storage.File.CloudFileDirectory)">
            <summary>
            Upload a directory to Azure File Storage.
            </summary>
            <param name="sourcePath">Path to the source directory</param>
            <param name="destFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the destination Azure file directory.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.UploadDirectoryAsync(System.String,Microsoft.Azure.Storage.File.CloudFileDirectory,Microsoft.Azure.Storage.DataMovement.UploadDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext)">
            <summary>
            Upload a directory to Azure File Storage.
            </summary>
            <param name="sourcePath">Path to the source directory</param>
            <param name="destFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the destination Azure file directory.</param>
            <param name="options">An <see cref="T:Microsoft.Azure.Storage.DataMovement.UploadDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.UploadDirectoryAsync(System.String,Microsoft.Azure.Storage.File.CloudFileDirectory,Microsoft.Azure.Storage.DataMovement.UploadDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext,System.Threading.CancellationToken)">
            <summary>
            Upload a directory to Azure File Storage.
            </summary>
            <param name="sourcePath">Path to the source directory</param>
            <param name="destFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the destination Azure file directory.</param>
            <param name="options">An <see cref="T:Microsoft.Azure.Storage.DataMovement.UploadDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.DownloadAsync(Microsoft.Azure.Storage.Blob.CloudBlob,System.String,Microsoft.Azure.Storage.DataMovement.DownloadOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext,System.Threading.CancellationToken)">
            <summary>
            Download an Azure blob from Azure Blob Storage.
            </summary>
            <param name="sourceBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the source Azure blob.</param>
            <param name="destPath">Path to the destination file.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DownloadOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.DownloadAsync(Microsoft.Azure.Storage.Blob.CloudBlob,System.IO.Stream)">
            <summary>
            Download an Azure blob from Azure Blob Storage.
            </summary>
            <param name="sourceBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the source Azure blob.</param>
            <param name="destStream">A <see cref="T:System.IO.Stream"/> object representing the destination stream.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.DownloadAsync(Microsoft.Azure.Storage.Blob.CloudBlob,System.IO.Stream,Microsoft.Azure.Storage.DataMovement.DownloadOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext)">
            <summary>
            Download an Azure blob from Azure Blob Storage.
            </summary>
            <param name="sourceBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the source Azure blob.</param>
            <param name="destStream">A <see cref="T:System.IO.Stream"/> object representing the destination stream.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DownloadOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.DownloadAsync(Microsoft.Azure.Storage.Blob.CloudBlob,System.IO.Stream,Microsoft.Azure.Storage.DataMovement.DownloadOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext,System.Threading.CancellationToken)">
            <summary>
            Download an Azure blob from Azure Blob Storage.
            </summary>
            <param name="sourceBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the source Azure blob.</param>
            <param name="destStream">A <see cref="T:System.IO.Stream"/> object representing the destination stream.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DownloadOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.DownloadAsync(Microsoft.Azure.Storage.File.CloudFile,System.String)">
            <summary>
            Download an Azure file from Azure File Storage.
            </summary>
            <param name="sourceFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the source Azure file.</param>
            <param name="destPath">Path to the destination file.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.DownloadAsync(Microsoft.Azure.Storage.File.CloudFile,System.String,Microsoft.Azure.Storage.DataMovement.DownloadOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext)">
            <summary>
            Download an Azure file from Azure File Storage.
            </summary>
            <param name="sourceFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the source Azure file.</param>
            <param name="destPath">Path to the destination file.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DownloadOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.DownloadAsync(Microsoft.Azure.Storage.File.CloudFile,System.String,Microsoft.Azure.Storage.DataMovement.DownloadOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext,System.Threading.CancellationToken)">
            <summary>
            Download an Azure file from Azure File Storage.
            </summary>
            <param name="sourceFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the source Azure file.</param>
            <param name="destPath">Path to the destination file.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DownloadOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.DownloadAsync(Microsoft.Azure.Storage.File.CloudFile,System.IO.Stream)">
            <summary>
            Download an Azure file from Azure File Storage.
            </summary>
            <param name="sourceFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the source Azure file.</param>
            <param name="destStream">A <see cref="T:System.IO.Stream"/> object representing the destination stream.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.DownloadAsync(Microsoft.Azure.Storage.File.CloudFile,System.IO.Stream,Microsoft.Azure.Storage.DataMovement.DownloadOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext)">
            <summary>
            Download an Azure file from Azure File Storage.
            </summary>
            <param name="sourceFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the source Azure file.</param>
            <param name="destStream">A <see cref="T:System.IO.Stream"/> object representing the destination stream.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DownloadOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.DownloadAsync(Microsoft.Azure.Storage.File.CloudFile,System.IO.Stream,Microsoft.Azure.Storage.DataMovement.DownloadOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext,System.Threading.CancellationToken)">
            <summary>
            Download an Azure file from Azure File Storage.
            </summary>
            <param name="sourceFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the source Azure file.</param>
            <param name="destStream">A <see cref="T:System.IO.Stream"/> object representing the destination stream.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DownloadOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.DownloadDirectoryAsync(Microsoft.Azure.Storage.Blob.CloudBlobDirectory,System.String,Microsoft.Azure.Storage.DataMovement.DownloadDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext)">
            <summary>
            Download an Azure blob directory from Azure Blob Storage.
            </summary>
            <param name="sourceBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the source Azure blob directory.</param>
            <param name="destPath">Path to the destination directory</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DownloadDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.DownloadDirectoryAsync(Microsoft.Azure.Storage.Blob.CloudBlobDirectory,System.String,Microsoft.Azure.Storage.DataMovement.DownloadDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext,System.Threading.CancellationToken)">
            <summary>
            Download an Azure blob directory from Azure Blob Storage.
            </summary>
            <param name="sourceBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the source Azure blob directory.</param>
            <param name="destPath">Path to the destination directory</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DownloadDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.DownloadDirectoryAsync(Microsoft.Azure.Storage.File.CloudFileDirectory,System.String,Microsoft.Azure.Storage.DataMovement.DownloadDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext)">
            <summary>
            Download an Azure file directory from Azure File Storage.
            </summary>
            <param name="sourceFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the source Azure file directory.</param>
            <param name="destPath">Path to the destination directory</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DownloadDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.DownloadDirectoryAsync(Microsoft.Azure.Storage.File.CloudFileDirectory,System.String,Microsoft.Azure.Storage.DataMovement.DownloadDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext,System.Threading.CancellationToken)">
            <summary>
            Download an Azure file directory from Azure File Storage.
            </summary>
            <param name="sourceFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the source Azure file directory.</param>
            <param name="destPath">Path to the destination directory</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DownloadDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.Blob.CloudBlob,System.Boolean)">
            <summary>
            Copy content, properties and metadata of one Azure blob to another.
            </summary>
            <param name="sourceBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the source Azure blob.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.Blob.CloudBlob,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext)">
            <summary>
            Copy content, properties and metadata of one Azure blob to another.
            </summary>
            <param name="sourceBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the source Azure blob.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.Blob.CloudBlob,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext,System.Threading.CancellationToken)">
            <summary>
            Copy content, properties and metadata of one Azure blob to another.
            </summary>
            <param name="sourceBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the source Azure blob.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.DataMovement.CopyMethod)">
            <summary>
            Copy content, properties and metadata of one Azure blob to another.
            </summary>
            <param name="sourceBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the source Azure blob.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.DataMovement.CopyMethod,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext)">
            <summary>
            Copy content, properties and metadata of one Azure blob to another.
            </summary>
            <param name="sourceBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the source Azure blob.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.DataMovement.CopyMethod,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext,System.Threading.CancellationToken)">
            <summary>
            Copy content, properties and metadata of one Azure blob to another.
            </summary>
            <param name="sourceBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the source Azure blob.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.File.CloudFile,System.Boolean)">
            <summary>
            Copy content, properties and metadata of an Azure blob to an Azure file.
            </summary>
            <param name="sourceBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the source Azure blob.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.File.CloudFile,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext)">
            <summary>
            Copy content, properties and metadata of an Azure blob to an Azure file.
            </summary>
            <param name="sourceBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the source Azure blob.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.File.CloudFile,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext,System.Threading.CancellationToken)">
            <summary>
            Copy content, properties and metadata of an Azure blob to an Azure file.
            </summary>
            <param name="sourceBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the source Azure blob.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.DataMovement.CopyMethod)">
            <summary>
            Copy content, properties and metadata of an Azure blob to an Azure file.
            </summary>
            <param name="sourceBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the source Azure blob.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.DataMovement.CopyMethod,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext)">
            <summary>
            Copy content, properties and metadata of an Azure blob to an Azure file.
            </summary>
            <param name="sourceBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the source Azure blob.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.DataMovement.CopyMethod,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext,System.Threading.CancellationToken)">
            <summary>
            Copy content, properties and metadata of an Azure blob to an Azure file.
            </summary>
            <param name="sourceBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the source Azure blob.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.Blob.CloudBlob,System.Boolean)">
            <summary>
            Copy content, properties and metadata of an Azure file to an Azure blob.
            </summary>
            <param name="sourceFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the source Azure file.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.Blob.CloudBlob,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext)">
            <summary>
            Copy content, properties and metadata of an Azure file to an Azure blob.
            </summary>
            <param name="sourceFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the source Azure file.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.Blob.CloudBlob,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext,System.Threading.CancellationToken)">
            <summary>
            Copy content, properties and metadata of an Azure file to an Azure blob.
            </summary>
            <param name="sourceFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the source Azure file.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.DataMovement.CopyMethod)">
            <summary>
            Copy content, properties and metadata of an Azure file to an Azure blob.
            </summary>
            <param name="sourceFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the source Azure file.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.DataMovement.CopyMethod,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext)">
            <summary>
            Copy content, properties and metadata of an Azure file to an Azure blob.
            </summary>
            <param name="sourceFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the source Azure file.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.Blob.CloudBlob,Microsoft.Azure.Storage.DataMovement.CopyMethod,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext,System.Threading.CancellationToken)">
            <summary>
            Copy content, properties and metadata of an Azure file to an Azure blob.
            </summary>
            <param name="sourceFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the source Azure file.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.File.CloudFile,System.Boolean)">
            <summary>
            Copy content, properties and metadata of an Azure file to another.
            </summary>
            <param name="sourceFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the source Azure file.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.File.CloudFile,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext)">
            <summary>
            Copy content, properties and metadata of an Azure file to another.
            </summary>
            <param name="sourceFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the source Azure file.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.File.CloudFile,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext,System.Threading.CancellationToken)">
            <summary>
            Copy content, properties and metadata of an Azure file to another.
            </summary>
            <param name="sourceFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the source Azure file.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.DataMovement.CopyMethod)">
            <summary>
            Copy content, properties and metadata of an Azure file to another.
            </summary>
            <param name="sourceFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the source Azure file.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.DataMovement.CopyMethod,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext)">
            <summary>
            Copy content, properties and metadata of an Azure file to another.
            </summary>
            <param name="sourceFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the source Azure file.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.File.CloudFile,Microsoft.Azure.Storage.DataMovement.CopyMethod,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext,System.Threading.CancellationToken)">
            <summary>
            Copy content, properties and metadata of an Azure file to another.
            </summary>
            <param name="sourceFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the source Azure file.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(System.Uri,Microsoft.Azure.Storage.Blob.CloudBlob,System.Boolean)">
            <summary>
            Copy file from an specified URI to an Azure blob.
            </summary>
            <param name="sourceUri">The <see cref="T:System.Uri"/> of the source file.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>Copying from an URI to Azure blob synchronously is not supported yet.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(System.Uri,Microsoft.Azure.Storage.Blob.CloudBlob,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext)">
            <summary>
            Copy file from an specified URI to an Azure blob.
            </summary>
            <param name="sourceUri">The <see cref="T:System.Uri"/> of the source file.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>Copying from an URI to Azure blob synchronously is not supported yet.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(System.Uri,Microsoft.Azure.Storage.Blob.CloudBlob,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext,System.Threading.CancellationToken)">
            <summary>
            Copy file from an specified URI to an Azure blob.
            </summary>
            <param name="sourceUri">The <see cref="T:System.Uri"/> of the source file.</param>
            <param name="destBlob">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlob"/> that is the destination Azure blob.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>Copying from an URI to Azure blob synchronously is not supported yet.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(System.Uri,Microsoft.Azure.Storage.File.CloudFile,System.Boolean)">
            <summary>
            Copy file from an specified URI to an Azure file.
            </summary>
            <param name="sourceUri">The <see cref="T:System.Uri"/> of the source file.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>Copying from an URI to Azure file synchronously is not supported yet.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(System.Uri,Microsoft.Azure.Storage.File.CloudFile,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext)">
            <summary>
            Copy file from an specified URI to an Azure file.
            </summary>
            <param name="sourceUri">The <see cref="T:System.Uri"/> of the source file.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>Copying from an URI to Azure file synchronously is not supported yet.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyAsync(System.Uri,Microsoft.Azure.Storage.File.CloudFile,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyOptions,Microsoft.Azure.Storage.DataMovement.SingleTransferContext,System.Threading.CancellationToken)">
            <summary>
            Copy file from an specified URI to an Azure file.
            </summary>
            <param name="sourceUri">The <see cref="T:System.Uri"/> of the source file.</param>
            <param name="destFile">The <see cref="T:Microsoft.Azure.Storage.File.CloudFile"/> that is the destination Azure file.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.SingleTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object that represents the asynchronous operation.</returns>
            <remarks>Copying from an URI to Azure file synchronously is not supported yet.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyDirectoryAsync(Microsoft.Azure.Storage.Blob.CloudBlobDirectory,Microsoft.Azure.Storage.Blob.CloudBlobDirectory,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext)">
            <summary>
            Copy an Azure blob directory to another Azure blob directory.
            </summary>
            <param name="sourceBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the source Azure blob directory.</param>
            <param name="destBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the destination Azure blob directory.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyDirectoryAsync(Microsoft.Azure.Storage.Blob.CloudBlobDirectory,Microsoft.Azure.Storage.Blob.CloudBlobDirectory,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext,System.Threading.CancellationToken)">
            <summary>
            Copy an Azure blob directory to another Azure blob directory.
            </summary>
            <param name="sourceBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the source Azure blob directory.</param>
            <param name="destBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the destination Azure blob directory.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyDirectoryAsync(Microsoft.Azure.Storage.Blob.CloudBlobDirectory,Microsoft.Azure.Storage.Blob.CloudBlobDirectory,Microsoft.Azure.Storage.DataMovement.CopyMethod,Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext)">
            <summary>
            Copy an Azure blob directory to another Azure blob directory.
            </summary>
            <param name="sourceBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the source Azure blob directory.</param>
            <param name="destBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the destination Azure blob directory.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyDirectoryAsync(Microsoft.Azure.Storage.Blob.CloudBlobDirectory,Microsoft.Azure.Storage.Blob.CloudBlobDirectory,Microsoft.Azure.Storage.DataMovement.CopyMethod,Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext,System.Threading.CancellationToken)">
            <summary>
            Copy an Azure blob directory to another Azure blob directory.
            </summary>
            <param name="sourceBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the source Azure blob directory.</param>
            <param name="destBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the destination Azure blob directory.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyDirectoryAsync(Microsoft.Azure.Storage.Blob.CloudBlobDirectory,Microsoft.Azure.Storage.File.CloudFileDirectory,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext)">
            <summary>
            Copy an Azure blob directory to an Azure file directory.
            </summary>
            <param name="sourceBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the source Azure blob directory.</param>
            <param name="destFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the destination Azure file directory.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyDirectoryAsync(Microsoft.Azure.Storage.Blob.CloudBlobDirectory,Microsoft.Azure.Storage.File.CloudFileDirectory,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext,System.Threading.CancellationToken)">
            <summary>
            Copy an Azure blob directory to an Azure file directory.
            </summary>
            <param name="sourceBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the source Azure blob directory.</param>
            <param name="destFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the destination Azure file directory.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyDirectoryAsync(Microsoft.Azure.Storage.Blob.CloudBlobDirectory,Microsoft.Azure.Storage.File.CloudFileDirectory,Microsoft.Azure.Storage.DataMovement.CopyMethod,Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext)">
            <summary>
            Copy an Azure blob directory to an Azure file directory.
            </summary>
            <param name="sourceBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the source Azure blob directory.</param>
            <param name="destFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the destination Azure file directory.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyDirectoryAsync(Microsoft.Azure.Storage.Blob.CloudBlobDirectory,Microsoft.Azure.Storage.File.CloudFileDirectory,Microsoft.Azure.Storage.DataMovement.CopyMethod,Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext,System.Threading.CancellationToken)">
            <summary>
            Copy an Azure blob directory to an Azure file directory.
            </summary>
            <param name="sourceBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the source Azure blob directory.</param>
            <param name="destFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the destination Azure file directory.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyDirectoryAsync(Microsoft.Azure.Storage.File.CloudFileDirectory,Microsoft.Azure.Storage.File.CloudFileDirectory,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext)">
            <summary>
            Copy an Azure file directory to another Azure file directory.
            </summary>
            <param name="sourceFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the source Azure file directory.</param>
            <param name="destFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the destination Azure file directory.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyDirectoryAsync(Microsoft.Azure.Storage.File.CloudFileDirectory,Microsoft.Azure.Storage.File.CloudFileDirectory,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext,System.Threading.CancellationToken)">
            <summary>
            Copy an Azure file directory to another Azure file directory.
            </summary>
            <param name="sourceFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the source Azure file directory.</param>
            <param name="destFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the destination Azure file directory.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyDirectoryAsync(Microsoft.Azure.Storage.File.CloudFileDirectory,Microsoft.Azure.Storage.File.CloudFileDirectory,Microsoft.Azure.Storage.DataMovement.CopyMethod,Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext)">
            <summary>
            Copy an Azure file directory to another Azure file directory.
            </summary>
            <param name="sourceFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the source Azure file directory.</param>
            <param name="destFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the destination Azure file directory.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyDirectoryAsync(Microsoft.Azure.Storage.File.CloudFileDirectory,Microsoft.Azure.Storage.File.CloudFileDirectory,Microsoft.Azure.Storage.DataMovement.CopyMethod,Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext,System.Threading.CancellationToken)">
            <summary>
            Copy an Azure file directory to another Azure file directory.
            </summary>
            <param name="sourceFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the source Azure file directory.</param>
            <param name="destFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the destination Azure file directory.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyDirectoryAsync(Microsoft.Azure.Storage.File.CloudFileDirectory,Microsoft.Azure.Storage.Blob.CloudBlobDirectory,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext)">
            <summary>
            Copy an Azure file directory to an Azure blob directory.
            </summary>
            <param name="sourceFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the source Azure file directory.</param>
            <param name="destBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the destination Azure blob directory.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyDirectoryAsync(Microsoft.Azure.Storage.File.CloudFileDirectory,Microsoft.Azure.Storage.Blob.CloudBlobDirectory,System.Boolean,Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext,System.Threading.CancellationToken)">
            <summary>
            Copy an Azure file directory to an Azure blob directory.
            </summary>
            <param name="sourceFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the source Azure file directory.</param>
            <param name="destBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the destination Azure blob directory.</param>
            <param name="isServiceCopy">A flag indicating whether the copy is service-side asynchronous copy or not.
            If this flag is set to true, service-side asychronous copy will be used; if this flag is set to false,
            file is downloaded from source first, then uploaded to destination.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyDirectoryAsync(Microsoft.Azure.Storage.File.CloudFileDirectory,Microsoft.Azure.Storage.Blob.CloudBlobDirectory,Microsoft.Azure.Storage.DataMovement.CopyMethod,Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext)">
            <summary>
            Copy an Azure file directory to an Azure blob directory.
            </summary>
            <param name="sourceFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the source Azure file directory.</param>
            <param name="destBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the destination Azure blob directory.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferManager.CopyDirectoryAsync(Microsoft.Azure.Storage.File.CloudFileDirectory,Microsoft.Azure.Storage.Blob.CloudBlobDirectory,Microsoft.Azure.Storage.DataMovement.CopyMethod,Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions,Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext,System.Threading.CancellationToken)">
            <summary>
            Copy an Azure file directory to an Azure blob directory.
            </summary>
            <param name="sourceFileDir">The <see cref="T:Microsoft.Azure.Storage.File.CloudFileDirectory"/> that is the source Azure file directory.</param>
            <param name="destBlobDir">The <see cref="T:Microsoft.Azure.Storage.Blob.CloudBlobDirectory"/> that is the destination Azure blob directory.</param>
            <param name="copyMethod">A flag indicating how the copying operation is handled in DataMovement Library.
            See definition of <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyMethod"/> for more details on how copying operation will be handled.</param>
            <param name="options">A <see cref="T:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions"/> object that specifies additional options for the operation.</param>
            <param name="context">A <see cref="T:Microsoft.Azure.Storage.DataMovement.DirectoryTransferContext"/> object that represents the context for the current operation.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> object to observe while waiting for a task to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object of type <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> that represents the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions">
            <summary>
            Represents a set of options that may be specified for copy directory operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions.PreserveSMBAttributes">
            <summary>
            Gets or sets a flag that indicates whether to preserve SMB attributes during copying.
            If set to true, destination Azure File's attributes will be set as source local file's attributes.
            SMB attributes includes last write time, creation time and <see cref="T:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes"/>.
            This flag only takes effect when copying from Azure File Service to Azure File Service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions.PreserveSMBPermissions">
            <summary>
            Gets or sets a flag that indicates whether to preserve SMB permissions during copying.
            This flag only takes effect when copying from Azure File Service to Azure File Service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions.BlobType">
            <summary>
            Gets or sets type of destination blob. This option takes effect only when copying from non Azure
            blob storage to Azure blob storage. If blob type is not specified, BlockBlob is used.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions.IncludeSnapshots">
            <summary>
            Gets or sets a flag indicating whether to include snapshots when copying from Azure blob storage.
            </summary>
            <remarks>
            If this flag is set to true, snapshots of the source blob will be copied to destination as
            separate files. Given a source blob name in the form of "x.y", where 'x' is the file
            name without extension and 'y' is the file name extension, the destination file name of blob
            snapshot is formatted as "x (%snapshot_time_stamp%).y".
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions.Delimiter">
            <summary>
            Gets or sets a char that indicates the delimiter character used to delimit virtual directories in a blob name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.CopyDirectoryOptions.EncryptionScope">
            <summary>
            Gets or sets a value which specifies the name of the encryption scope to use to encrypt the data provided in the request.
            This value only takes effect when destination is Azure Blob Service.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.DirectoryOptions">
            <summary>
            Represents a set of options that may be specified for directory transfer operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.DirectoryOptions.SearchPattern">
            <summary>
            Gets or sets a string that will be used to match against the names of files.
            </summary>
            <remarks>
            Behavior of SearchPattern match varies for different source directory types and setting of Recursive:
            When source is local directory path, SearchPattern is matched against source file name as standard wildcards. If 
            recuresive is set to false, only files directly under the source directory will be matched. Otherwise, all files in the
            sub-directory will be matched as well.
            
            When source is Azure blob directory, if recuresive is set to true, SearchPattern is matched against source blob as name prefix.
            Otherwise, only Azure blob with the exact name specified by SearchPattern will be matched.
            
            When source is Azure file directory, if recursive is set to true, SearchPattern is not supported. Otherwise, only Azure file 
            with the exact name specified by SearchPattern will be matched.
            
            If SearchPattern is not specified, "*.*" will be used for local directory source while empty string for Azure blob/file
            directory. So please either specify the Search Pattern or set Recursive to true when source is Azure blob/file directory,
            otherwise, no blob/file will be matched.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.DirectoryOptions.Recursive">
            <summary>
            Gets or sets a boolean that indicates whether to include subdirectories when doing a directory transfer operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.DownloadDirectoryOptions">
            <summary>
            Represents a set of options that may be specified for download directory operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.DownloadDirectoryOptions.DisableContentMD5Validation">
            <summary>
            Gets or sets a flag that indicates whether to validate content MD5 or not when reading data from the source object.
            If set to true, source object content MD5 will be validated; otherwise, source object content MD5 will not be validated.
            If not specified, it defaults to false.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.DownloadDirectoryOptions.IncludeSnapshots">
            <summary>
            Gets or sets a flag indicating whether to include snapshots when downloading from Azure blob storage.
            </summary>
            <remarks>
            If this flag is set to true, snapshots of the source blob will be copied to destination as
            separate files. Given a source blob name in the form of "x.y", where 'x' is the file
            name without extension and 'y' is the file name extension, the destination file name of blob
            snapshot is formatted as "x (%snapshot_time_stamp%).y".
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.DownloadDirectoryOptions.Delimiter">
            <summary>
            Gets or sets a char that indicates the delimiter character used to delimit virtual directories in a blob name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.DownloadDirectoryOptions.PreserveSMBAttributes">
            <summary>
            Gets or sets a flag that indicates whether to preserve SMB attributes during downloading.
            If set to true, destination Azure File's attributes will be set as source local file's attributes.
            SMB attributes includes last write time, creation time and <see cref="T:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes"/>.
            <see cref="T:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes"/> will be converted to <see cref="T:System.IO.FileAttributes"/> ,
            and then set to destination local file.
            This flag only takes effect when uploading from local file to Azure File Service.
            Preserving SMB attributes is only supported on Windows.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.DownloadDirectoryOptions.PreserveSMBPermissions">
            <summary>
            Gets or sets a value that indicates whether to preserve SMB permissions during downloading.
            Preserving SMB permissions is only supported on Windows.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.UploadDirectoryOptions">
            <summary>
            Represents a set of options that may be specified for upload directory operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.UploadDirectoryOptions.BlobType">
            <summary>
            Gets or sets type of destination blob. This option takes effect only when uploading to Azure blob storage.
            If blob type is not specified, BlockBlob is used.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.UploadDirectoryOptions.FollowSymlink">
            <summary>
            Gets or sets whether to follow symlinked directories. This option only works in Unix/Linux platforms.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.UploadDirectoryOptions.PreserveSMBAttributes">
            <summary>
            Gets or sets a flag that indicates whether to preserve SMB attributes during uploading.
            If set to true, destination Azure File's attributes will be set as source local file's attributes.
            SMB attributes includes last write time, creation time and <see cref="T:System.IO.FileAttributes"/>.
            <see cref="T:System.IO.FileAttributes"/> will be converted to <see cref="T:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes"/>,
            and then set to destination Azure File.
            This flag only takes effect when uploading from local file to Azure File Service.
            Preserving SMB attributes is only supported on Windows.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.UploadDirectoryOptions.PreserveSMBPermissions">
            <summary>
            Gets or sets a value that indicates whether to preserve SMB permissions during uploading.
            Preserving SMB permissions is only supported on Windows.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.UploadDirectoryOptions.EncryptionScope">
            <summary>
            Gets or sets a value which specifies the name of the encryption scope to use to encrypt the data provided in the request.
            This value only takes effect when destination is Azure Blob Service.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferStatus">
            <summary>
            Transfer status
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferStatus.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferStatus.#ctor(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferStatus"/> class.
            </summary>
            <param name="bytesTransferred">Number of bytes that have been transferred.</param>
            <param name="numberOfFilesTransferred">Number of files that have been transferred.</param>
            <param name="numberOfFilesSkipped">Number of files that are skipped to be transferred.</param>
            <param name="numberOfFilesFailed">Number of files that are failed to be transferred.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferStatus.BytesTransferred">
            <summary>
            Gets the number of bytes that have been transferred.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferStatus.NumberOfFilesTransferred">
            <summary>
            Gets the number of files that have been transferred.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferStatus.NumberOfFilesSkipped">
            <summary>
            Gets the number of files that are skipped to be transferred.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferStatus.NumberOfFilesFailed">
            <summary>
            Gets the number of files that are failed to be transferred.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferScheduler">
            <summary>
            TransferScheduler class, used for  transferring Microsoft Azure
            Storage objects.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferScheduler.controllerQueue">
            <summary>
            Main collection of transfer controllers.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferScheduler.internalControllerQueue">
            <summary>
            Internal queue for the main controllers collection.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferScheduler.activeControllerItems">
            <summary>
            A buffer from which we select a transfer controller and add it into 
            active tasks when the bucket of active tasks is not full.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferScheduler.activeControllerItemCount">
            <summary>
            Active controller item count used to help activeControllerItems statistics.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferScheduler.ActiveControllerItemPrefetchRatio">
            <summary>
            Active controller item prefetch ratio, used to set how much controller item could be prefetched during scheduling controllers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferScheduler.MaxActiveControllerItemCount">
            <summary>
            Max active controller item count used to limit candidate controller items to be scheduled in parallel.
            Note: ParallelOperations could be changing.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferScheduler.ongoingTasks">
            <summary>
            Ongoing task used to control ongoing tasks dispatching.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferScheduler.ongoingTaskEvent">
            <summary>
            Ongoing task sempahore used to help ongoing task dispatching.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferScheduler.MaxControllerItemCountToScheduleEachRound">
            <summary>
            Max controller work items count to schedule per scheduling round.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferScheduler.cancellationTokenSource">
            <summary>
            CancellationToken source.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferScheduler.transferOptions">
            <summary>
            Transfer options that this manager will pass to transfer controllers.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferScheduler.controllerResetEvent">
            <summary>
            Wait handle event for completion.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferScheduler.memoryManager">
            <summary>
            A pool of memory buffer objects, used to limit total consumed memory.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferScheduler.randomGenerator">
            <summary>
            Random object to generate random numbers.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferScheduler.disposeLock">
            <summary>
            Used to lock disposing to avoid race condition between different disposing and other method calls.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferScheduler.isDisposed">
            <summary>
            Indicate whether the instance has been disposed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferScheduler.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferScheduler" /> class.
            </summary>        
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferScheduler.#ctor(Microsoft.Azure.Storage.DataMovement.TransferConfigurations)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferScheduler" /> class.
            </summary>
            <param name="options">BlobTransfer options.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferScheduler.Finalize">
            <summary>
            Finalizes an instance of the 
            <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferScheduler" /> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferScheduler.TransferOptions">
            <summary>
            Gets the transfer options that this manager will pass to
            transfer controllers.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferScheduler.Dispose">
            <summary>
            Public dispose method to release all resources owned.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferScheduler.ExecuteJobAsync(Microsoft.Azure.Storage.DataMovement.TransferJob,System.Threading.CancellationToken)">
            <summary>
            Execute a transfer job asynchronously.
            </summary>
            <param name="job">Transfer job to be executed.</param>
            <param name="cancellationToken">Token used to notify the job that it should stop.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferScheduler.WaitForCompletion">
            <summary>
            Blocks until the queue is empty and all transfers have been 
            completed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferScheduler.CancelWork">
            <summary>
            Cancels any remaining queued work.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferScheduler.Dispose(System.Boolean)">
            <summary>
            Private dispose method to release managed/unmanaged objects.
            If disposing is true clean up managed resources as well as 
            unmanaged resources.
            If disposing is false only clean up unmanaged resources.
            </summary>
            <param name="disposing">Indicates whether or not to dispose 
            managed resources.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferConfigurations">
            <summary>
            TransferConfigurations class.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferConfigurations.blockSize">
            <summary>
            Stores the BlockSize to use for Windows Azure Storage transfers to block blob(s).
            It must be between 4MB and 100MB and be multiple of 4MB.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferConfigurations.parallelOperations">
            <summary>
            How many work items to process in parallel.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferConfigurations.maximumCacheSize">
            <summary>
            Maximum amount of cache memory to use in bytes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferConfigurations.maxListingConcurrency">
            <summary>
            How many listings can be performed in parallel.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferConfigurations.memStatus">
            <summary>
            Instance to call native methods to get current memory status.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferConfigurations.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferConfigurations" /> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferConfigurations.ParallelOperations">
            <summary>
            Gets or sets a value indicating how many work items to process
            concurrently. Downloading or uploading a single blob can consist
            of a large number of work items.
            </summary>
            <value>How many work items to process concurrently.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferConfigurations.MaxListingConcurrency">
            <summary>
            Gets or sets a value indicating how many listing works to process concurrently.
            When source is an Azure File directory or local file directory, DataMovement Library would list the directory in parallel.
            This value is to indicate the maximum number of listing works to process in parallel.
            </summary>
            <value>How many listing works to process concurrently.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferConfigurations.BlockSize">
             <summary>
             Gets or sets the BlockSize to use for Windows Azure Storage transfers to block blob(s).
             It must be between 4MB and 100MB and be multiple of 4MB.
            
             Currently, the max block count of a block blob is limited to 50000.
             When transfering a big file and the BlockSize provided is smaller than the minimum value - (size/50000),
             it'll be reset to a value which is greater than the minimum value and multiple of 4MB for this file.
             </summary>
             <value>BlockSize to use for Windows Azure Storage transfers.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferConfigurations.UserAgentPrefix">
            <summary>
            Gets or sets the user agent prefix
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferConfigurations.MaximumCacheSize">
            <summary>
            Gets or sets a value indicating how much memory we can cache
            during upload/download.
            </summary>
            <value>Maximum amount of cache memory to use in bytes.</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferConfigurations.SupportUncPath">
            <summary>
            To indicate whether the process environment supports UNC path.
            
            On Windows, it requires to use UNC path to access files/directories with long path. 
            In some environment, the .Net Framework only supports legacy path without UNC path support.
            DataMovement Library will detect whether .Net Framework supports UNC path in the process environment 
            to determine whether to use UNC path in the following transfers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferConfigurations.MemoryChunkSize">
            <summary>
            The size of memory chunk of memory pool
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferConfigurations.UpdateMaximumCacheSize(System.Int32)">
            <summary>
            Update the memory pool size according to the block size
            </summary>
            <param name="newBlockSize"></param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.CopyOptions">
            <summary>
            Represents a set of options that may be specified for copy operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.CopyOptions.PreserveSMBAttributes">
            <summary>
            Gets or sets a flag that indicates whether to preserve SMB attributes during copying.
            If set to true, destination Azure File's attributes will be set as source local file's attributes.
            SMB attributes includes last write time, creation time and <see cref="T:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes"/>.
            This flag only takes effect when copying from Azure File Service to Azure File Service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.CopyOptions.PreserveSMBPermissions">
            <summary>
            Gets or sets a flag that indicates whether to preserve SMB permissions during copying.
            This flag only takes effect when copying from Azure File Service to Azure File Service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.CopyOptions.SourceAccessCondition">
            <summary>
            Gets or sets an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source object. If <c>null</c>, no condition is used.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.CopyOptions.DestinationAccessCondition">
            <summary>
            Gets or sets an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination object. If <c>null</c>, no condition is used.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.CopyOptions.EncryptionScope">
            <summary>
            Gets or sets a value which specifies the name of the encryption scope to use to encrypt the data provided in the request.
            This value only takes effect when destination is Azure Blob Service.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.DownloadOptions">
            <summary>
            Represents a set of options that may be specified for download operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.DownloadOptions.SourceAccessCondition">
            <summary>
            Gets or sets an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the source object. If <c>null</c>, no condition is used.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.DownloadOptions.DisableContentMD5Validation">
            <summary>
            Gets or sets a flag that indicates whether to validate content MD5 or not when reading data from the source object.
            If set to true, source object content MD5 will be validated; otherwise, source object content MD5 will not be validated.
            If not specified, it defaults to false.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.DownloadOptions.PreserveSMBAttributes">
            <summary>
            Gets or sets a flag that indicates whether to preserve SMB attributes during downloading.
            If set to true, destination Azure File's attributes will be set as source local file's attributes.
            SMB attributes includes last write time, creation time and <see cref="T:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes"/>.
            <see cref="T:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes"/> will be converted to <see cref="T:System.IO.FileAttributes"/> ,
            and then set to destination local file.
            This flag only takes effect when uploading from local file to Azure File Service.
            Preserving SMB attributes is only supported on Windows.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.DownloadOptions.PreserveSMBPermissions">
            <summary>
            Gets or sets a value that indicates whether to preserve SMB permissions during downloading.
            Preserving SMB permissions is only supported on Windows.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.UploadOptions">
            <summary>
            Represents a set of options that may be specified for upload operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.UploadOptions.DestinationAccessCondition">
            <summary>
            Gets or sets an <see cref="T:Microsoft.Azure.Storage.AccessCondition"/> object that represents the access conditions for the destination object. If <c>null</c>, no condition is used.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.UploadOptions.PreserveSMBAttributes">
            <summary>
            Gets or sets a flag that indicates whether to preserve SMB attributes during uploading.
            If set to true, destination Azure File's attributes will be set as source local file's attributes.
            SMB attributes includes last write time, creation time and <see cref="T:System.IO.FileAttributes"/>.
            <see cref="T:System.IO.FileAttributes"/> will be converted to <see cref="T:Microsoft.Azure.Storage.File.CloudFileNtfsAttributes"/>,
            and then set to destination Azure File.
            This flag only takes effect when uploading from local file to Azure File Service.
            Preserving SMB attributes is only supported on Windows.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.UploadOptions.PreserveSMBPermissions">
            <summary>
            Gets or sets a value that indicates whether to preserve SMB permissions during uploading.
            Preserving SMB permissions is only supported on Windows.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.UploadOptions.EncryptionScope">
            <summary>
            Gets or sets a value which specifies the name of the encryption scope to use to encrypt the data provided in the request.
            This value only takes effect when destination is Azure Blob Service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Attributes.CacheControl">
            <summary>
            Gets or sets the cache-control value stored for blob/azure file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Attributes.ContentDisposition">
            <summary>
            Gets or sets the content-disposition value stored for blob/azure file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Attributes.ContentEncoding">
            <summary>
            Gets or sets the content-encoding value stored for blob/azure file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Attributes.ContentLanguage">
            <summary>
            Gets or sets the content-language value stored for blob/azure file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Attributes.ContentMD5">
            <summary>
            Gets or sets the content-MD5 value stored for blob/azure file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Attributes.ContentType">
            <summary>
            Gets or sets the content-type value stored for blob/azure file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Attributes.Metadata">
            <summary>
            Gets or sets the user-defined metadata for blob/azure file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Attributes.CloudFileNtfsAttributes">
            <summary>
            Gets or sets the file attributes for azure file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Attributes.CreationTime">
            <summary>
            Gets or sets the file's creation time for azure file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Attributes.LastWriteTime">
            <summary>
            Gets or sets the file's last write time for azure file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Attributes.PortableSDDL">
            <summary>
            Gets or sets the file attributes for azure file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Attributes.OverWriteAll">
            <summary>
            Gets or sets a value to indicate whether to overwrite all attribute on destination,
            or keep its original value if it's not set.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.ReadDataState">
            <summary>
            Keep the state of reading a single block from the input stream. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.ReadDataState.MemoryStream">
            <summary>
            Gets or sets the memory stream used to encapsulate the memory
            buffer for passing the methods such as PutBlock, WritePages, 
            DownloadToStream and DownloadRangeToStream, as these methods
            requires a stream and doesn't allow for a byte array as input.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.ReadDataState.MemoryManager">
            <summary>
            Gets or sets the memory manager that controls global memory
            allocation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.ReadDataState.Dispose(System.Boolean)">
            <summary>
            Private dispose method to release managed/unmanaged objects.
            If disposing = true clean up managed resources as well as unmanaged resources.
            If disposing = false only clean up unmanaged resources.
            </summary>
            <param name="disposing">Indicates whether or not to dispose managed resources.</param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.SharedTransferData.TotalLength">
            <summary>
            Gets or sets length of source.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.SharedTransferData.UpdateTotalLength(System.Int64)">
            <summary>
            Update totallength but don't update BlockSize accordingly.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.SharedTransferData.TransferJob">
            <summary>
            Gets or sets the job instance representing the transfer.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.SharedTransferData.AvailableData">
            <summary>
            Gets or sets list of available transfer data from source.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.SharedTransferData.DisableContentMD5Validation">
            <summary>
            Gets or sets a value indicating whether should disable validation of content md5.
            The reader should get this value from source's <c>RequestOptions</c>,
            the writer should do or not do validation on content md5 according to this value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.SharedTransferData.Attributes">
            <summary>
            Gets or sets attribute for blob/azure file.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferDataState">
            <summary>
            Calculate and show transfer speed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferDataState.MemoryBuffer">
            <summary>
            Gets or sets a handle to the memory buffer to ensure the
            memory buffer remains in memory during the entire operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferDataState.StartOffset">
            <summary>
            Gets or sets the starting offset of this part of data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferDataState.Length">
            <summary>
            Gets or sets the length of this part of data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferDataState.BytesRead">
            <summary>
            Gets or sets how many bytes have been read.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferDataState.Dispose">
            <summary>
            Public dispose method to release all resources owned.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferDataState.Dispose(System.Boolean)">
            <summary>
            Private dispose method to release managed/unmanaged objects.
            If disposing = true clean up managed resources as well as unmanaged resources.
            If disposing = false only clean up unmanaged resources.
            </summary>
            <param name="disposing">Indicates whether or not to dispose managed resources.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferDownloadBuffer.MarkAsProcessed">
            <summary>
            Mark this buffer as processed. The return value indicates whether the buffer
            is marked as processed by invocation of this method. This method returns true 
            exactly once. The caller is supposed to invoke this method before processing 
            the buffer and proceed only if this method returns true.
            </summary>
            <returns>Whether this instance is marked as processed by invocation of this method.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker">
            <summary>
            Calculate transfer progress.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.bytesTransferred">
            <summary>
            Stores the number of bytes that have been transferred.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.numberOfFilesTransferred">
            <summary>
            Stores the number of files that have been transferred.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.numberOfFilesSkipped">
            <summary>
            Stores the number of files that are failed to be transferred.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.numberOfFilesFailed">
            <summary>
            Stores the number of files that are skipped.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.invokingProgressHandler">
            <summary>
            A flag indicating whether the progress handler is being invoked
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker"/> class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.#ctor(Microsoft.Azure.Storage.DataMovement.TransferProgressTracker)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker" /> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.Parent">
            <summary>
            Gets or sets the parent progress tracker
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.ProgressHandler">
            <summary>
            Gets or sets the progress handler
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.BytesTransferred">
            <summary>
            Gets the number of bytes that have been transferred.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.NumberOfFilesTransferred">
            <summary>
            Gets the number of files that have been transferred.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.NumberOfFilesSkipped">
            <summary>
            Gets the number of files that are skipped to be transferred.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.NumberOfFilesFailed">
            <summary>
            Gets the number of files that are failed to be transferred.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.AddBytesTransferred(System.Int64)">
            <summary>
            Updates the current status by indicating the bytes transferred.
            </summary>
            <param name="bytesToIncrease">Indicating by how much the bytes transferred increased.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.AddNumberOfFilesTransferred(System.Int64)">
            <summary>
            Updates the number of files that have been transferred.
            </summary>
            <param name="numberOfFilesToIncrease">Indicating by how much the number of file that have been transferred increased.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.AddNumberOfFilesSkipped(System.Int64)">
            <summary>
            Updates the number of files that are skipped.
            </summary>
            <param name="numberOfFilesToIncrease">Indicating by how much the number of file that are skipped increased.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.AddNumberOfFilesFailed(System.Int64)">
            <summary>
            Updates the number of files that are failed to be transferred.
            </summary>
            <param name="numberOfFilesToIncrease">Indicating by how much the number of file that are failed to be transferred increased.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.Copy">
            <summary>
            Gets a copy of this transfer progress tracker object.
            </summary>
            <returns>A copy of current TransferProgressTracker object</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.TransferProgressTracker.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes transfer progress.
            </summary>
            <param name="info">Serialization info object.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.Transfer_RequestOptions">
            <summary>
            Defines default RequestOptions for every type of transfer job.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Transfer_RequestOptions.DefaultRetryCountXMsError">
            <summary>
            Stores the default client retry count in x-ms error.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Transfer_RequestOptions.DefaultRetryCountOtherError">
            <summary>
            Stores the default client retry count in non x-ms error.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Transfer_RequestOptions.DefaultMaximumExecutionTime">
            <summary>
            Stores the default maximum execution time across all potential retries. 
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Transfer_RequestOptions.DefaultServerTimeout">
            <summary>
            Stores the default server timeout.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Transfer_RequestOptions.retryPoliciesDefaultBackoff">
            <summary>
            Stores the default back-off.
            Increases exponentially used with ExponentialRetry: 3, 9, 21, 45, 93, 120, 120, 120, ...
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Transfer_RequestOptions.DefaultBlobRequestOptions">
            <summary>
            Gets the default <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/>.
            </summary>
            <value>The default <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/></value>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Transfer_RequestOptions.DefaultHttpsBlobRequestOptions">
            <summary>
            Gets the default <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> for HTTPs transfers.
            </summary>
            <value>The default <see cref="T:Microsoft.Azure.Storage.Blob.BlobRequestOptions"/> for HTTPs transfers</value>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Transfer_RequestOptions.DefaultFileRequestOptions">
            <summary>
            Gets the default <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions"/>.
            </summary>
            <value>The default <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions"/></value>
        </member>
        <member name="P:Microsoft.Azure.Storage.DataMovement.Transfer_RequestOptions.DefaultHttpsFileRequestOptions">
            <summary>
            Gets the default <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions"/> for HTTPs transfers.
            </summary>
            <value>The default <see cref="T:Microsoft.Azure.Storage.File.FileRequestOptions"/> for HTTPs transfers</value>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Transfer_RequestOptions.CreateDefaultRequestOptions(Microsoft.Azure.Storage.DataMovement.TransferLocation)">
            <summary>
            Creates the default request options for specific location.
            </summary>
            <param name="location">The location <see cref="T:Microsoft.Azure.Storage.DataMovement.TransferLocation"/> which needs get a default request options.</param>
            <returns>The default request options which implements <see cref="T:Microsoft.Azure.Storage.IRequestOptions"/> for specific location.</returns>
        </member>
        <member name="T:Microsoft.Azure.Storage.DataMovement.Utils">
            <summary>
            Class for various utils.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Utils.ReservedBaseFileNames">
            <summary>
            These filenames are reserved on windows, regardless of the file extension.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Utils.ReservedFileNames">
            <summary>
            These filenames are reserved on windows, only if the full filename matches.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Storage.DataMovement.Utils.SizeFormats">
            <summary>
            Define the various possible size postfixes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Utils.Range.SplitRanges(System.Int64)">
            <summary>
            Split a Range into multiple Range objects, each at most maxRangeSize long.
            </summary>
            <param name="maxRangeSize">Maximum length for each piece.</param>
            <returns>List of Range objects.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Utils.AppendSnapShotTimeToFileName(System.String,System.Nullable{System.DateTimeOffset})">
            <summary>
            Append snapshot time to a file name.
            </summary>
            <param name="fileName">Original file name.</param>
            <param name="snapshotTime">Snapshot time to append.</param>
            <returns>A file name with appended snapshot time.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Utils.BytesToHumanReadableSize(System.Double)">
            <summary>
            Translate a size in bytes to human readable form.
            </summary>
            <param name="size">Size in bytes.</param>
            <returns>Human readable form string.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Utils.CheckCancellation(System.Threading.CancellationToken)">
            <summary>
            Check cancellation and throw <exception cref="T:System.OperationCanceledException"/>, if cancellation is requested.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Utils.ExecuteXsclApiCallAsync(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            This is the wrapper for executing APIs defined in Azure storage .Net client library, 
            when wishing to return from thread pool immediately.
            As XSCL based on .Net Framework uses self-customized APM, and since XSCL 9.0.0.0, 
            .Net Core implementation changed async pattern, which removed Task.Run wrapper previously existed.
            This method uses Task.Run as calling wrapper for XSCL APIs, in order to return from thread pool immediately.
            </summary>
            <param name="func">Function to be called.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for a task to complete.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Utils.GenerateBlobRequestOptions(Microsoft.Azure.Storage.Blob.BlobRequestOptions,System.Boolean)">
            <summary>
            Generate a BlobRequestOptions with custom BlobRequestOptions.
            We have default MaximumExecutionTime, ServerTimeout and RetryPolicy. 
            If user doesn't set these properties, we should use the default ones.
            Others, we should use the custom ones.
            </summary>
            <param name="customRequestOptions">BlobRequestOptions customer input in TransferLocation.</param>
            <param name="isCreationRequest">Indicate whether to generate request options for a CREATE requestion which requires shorter server timeout. </param>
            <returns>BlobRequestOptions instance with custom BlobRequestOptions properties.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Utils.GenerateConditionWithCustomerCondition(Microsoft.Azure.Storage.AccessCondition,System.Boolean)">
            <summary>
            Generate an AccessCondition instance with lease id customer condition.
            For upload/copy, if it succeeded at the first operation to fetching destination attribute with customer condition,
            it means that the blob totally meet the condition. 
            Here, only need to keep LeaseId in the customer condition for the following operations.
            </summary>
            <param name="customCondition">Condition customer input in TransferLocation.</param>
            <param name="checkedCustomAC">To specify whether have already verified the custom access condition against the blob.</param>
            <returns>AccessCondition instance with customer condition's LeaseId.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Utils.GenerateFileRequestOptions(Microsoft.Azure.Storage.File.FileRequestOptions,System.Boolean)">
            <summary>
            Generate a FileRequestOptions with custom FileRequestOptions.
            We have default MaximumExecutionTime, ServerTimeout and RetryPolicy. 
            If user doesn't set these properties, we should use the default ones.
            Others, we should the custom ones.
            </summary>
            <param name="customRequestOptions">FileRequestOptions customer input in TransferLocation.</param>
            <param name="isCreationRequest">Indicate whether to generate request options for a CREATE requestion which requires shorter server timeout. </param>
            <returns>FileRequestOptions instance with custom FileRequestOptions properties.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Utils.GenerateIfMatchConditionWithCustomerCondition(System.String,Microsoft.Azure.Storage.AccessCondition,System.Boolean)">
            <summary>
            Generate an AccessCondition instance of IfMatchETag with customer condition.
            For download/copy, if it succeeded at the first operation to fetching attribute with customer condition,
            it means that the blob totally meet the condition. 
            Here, only need to keep LeaseId in the customer condition for the following operations.
            </summary>
            <param name="etag">ETag string.</param>
            <param name="customCondition">Condition customer input in TransferLocation.</param>
            <param name="checkedCustomAC">To specify whether have already verified the custom access condition against the blob.</param>
            <returns>AccessCondition instance of IfMatchETag with customer condition's LeaseId.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Utils.GenerateOperationContext(Microsoft.Azure.Storage.DataMovement.TransferContext)">
            <summary>
            Generate an OperationContext from the the specified TransferContext.
            </summary>
            <param name="transferContext">Transfer context</param>
            <returns>An <see cref="T:Microsoft.Azure.Storage.OperationContext"/> object.</returns>
        </member>
        <member name="M:Microsoft.Azure.Storage.DataMovement.Utils.ToErrorDetail(Microsoft.Azure.Storage.StorageException)">
            <summary>
            Returns a string that represents error details of the corresponding <see cref="T:Microsoft.Azure.Storage.StorageException"/>.
            </summary>
            <param name="ex">The given exception.</param>
            <returns>A string that represents error details of the corresponding <see cref="T:Microsoft.Azure.Storage.StorageException"/>.</returns>
        </member>
    </members>
</doc>
